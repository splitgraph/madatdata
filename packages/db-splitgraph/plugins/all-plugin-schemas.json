{
  "data": {
    "externalPlugins": [
      {
        "pluginName": "postgres_fdw",
        "name": "PostgreSQL",
        "description": "Data source for PostgreSQL databases that supports live querying, based on postgres_fdw",
        "supportsMount": true,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "postgres-live",
        "canonicalDataSourceName": "postgres",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "title": "Host",
              "description": "Hostname or IP address of the PostgreSQL instance"
            },
            "port": {
              "type": "integer",
              "title": "Port",
              "description": "Port of the database"
            },
            "dbname": {
              "type": "string",
              "title": "Database",
              "description": "Database name"
            },
            "remote_schema": {
              "type": "string",
              "title": "Schema name",
              "description": "Schema name to import data from",
              "default": "public"
            },
            "use_remote_estimate": {
              "type": "boolean",
              "default": false,
              "title": "Use remote EXPLAIN",
              "description": "Issue remote EXPLAIN commands to obtain cost estimates"
            },
            "fetch_size": {
              "type": "integer",
              "title": "Fetch size",
              "description": "Number of rows from the remote server to get in each fetch operation",
              "default": 10000
            }
          },
          "required": ["host", "port", "dbname", "remote_schema"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            }
          },
          "required": ["username", "password"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            },
            "table_name": {
              "type": "string",
              "title": "Table name"
            },
            "schema_name": {
              "type": "string",
              "title": "Schema name"
            }
          },
          "required": []
        }
      },
      {
        "pluginName": "mongo_fdw",
        "name": "MongoDB",
        "description": "Data source for MongoDB databases that supports live querying, based on mongo_fdw",
        "supportsMount": true,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mongo-live",
        "canonicalDataSourceName": "mongodb",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "title": "Host"
            },
            "port": {
              "type": "integer",
              "title": "Port"
            }
          },
          "required": ["host", "port"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            }
          },
          "required": ["username", "password"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            },
            "database": {
              "type": "string",
              "title": "Database name"
            },
            "collection": {
              "type": "string",
              "title": "Collection name"
            }
          },
          "required": ["database", "collection"]
        }
      },
      {
        "pluginName": "mysql_fdw",
        "name": "MySQL",
        "description": "Data source for MySQL databases that supports live querying, based on mysql_fdw",
        "supportsMount": true,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mysql-live",
        "canonicalDataSourceName": "mysql",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "title": "Host"
            },
            "port": {
              "type": "integer",
              "title": "Port"
            },
            "dbname": {
              "type": "string",
              "title": "Database name"
            }
          },
          "required": ["host", "port", "dbname"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            }
          },
          "required": ["username", "password"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            }
          }
        }
      },
      {
        "pluginName": "socrata",
        "name": "Socrata",
        "description": "Data source for remote Socrata datasets that uses SoQL for live queries",
        "supportsMount": true,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "socrata-live",
        "canonicalDataSourceName": "socrata",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "domain": {
              "type": "string",
              "description": "Socrata domain, for example, data.albanyny.gov"
            },
            "batch_size": {
              "type": "integer",
              "description": "Amount of rows to fetch from Socrata per request (limit parameter)",
              "minimum": 1,
              "default": 1000,
              "maximum": 50000
            }
          },
          "required": ["domain"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "app_token": {
              "type": "string",
              "description": "Socrata app token"
            }
          }
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            },
            "socrata_id": {
              "type": "string",
              "description": "Socrata dataset ID, e.g. xzkq-xp2w"
            }
          },
          "required": ["socrata_id"]
        }
      },
      {
        "pluginName": "elasticsearch",
        "name": "Elasticsearch",
        "description": "Data source for Elasticsearch indexes that supports live querying, based on pg_es_fdw",
        "supportsMount": true,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "elasticsearch-live",
        "canonicalDataSourceName": "elasticsearch",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "title": "Host"
            },
            "port": {
              "type": "integer",
              "title": "Port"
            }
          },
          "required": ["host", "port"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            }
          }
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            },
            "index": {
              "type": "string",
              "title": "Index name or pattern",
              "description": "ES index name or pattern to use, for example, \"events-*\""
            },
            "type": {
              "type": "string",
              "title": "doc_type (ES6 or earlier)",
              "description": "Pre-ES7 doc_type, not required in ES7 or later"
            },
            "query_column": {
              "type": "string",
              "title": "Query column name",
              "description": "Allows you to do `WHERE query = '{match: ...}'`",
              "default": "query"
            },
            "score_column": {
              "type": "string",
              "title": "Score column name",
              "description": "Name of the column with the document score"
            },
            "scroll_size": {
              "type": "integer",
              "title": "Scroll size",
              "description": "Fetch size, default 1000",
              "default": 1000
            },
            "scroll_duration": {
              "type": "string",
              "title": "Scroll duration",
              "description": "How long to hold the scroll context open for, default 10m",
              "default": "10m"
            }
          },
          "required": ["index"]
        }
      },
      {
        "pluginName": "csv",
        "name": "CSV files in S3/HTTP",
        "description": "CSV files in S3/HTTP",
        "supportsMount": true,
        "supportsSync": false,
        "supportsLoad": true,
        "marketingSlug": "csv-live",
        "canonicalDataSourceName": "csv",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "connection": {
              "type": "object",
              "title": "Connection",
              "oneOf": [
                {
                  "type": "object",
                  "required": ["connection_type", "url"],
                  "properties": {
                    "connection_type": {
                      "type": "string",
                      "const": "http",
                      "title": "Connection type"
                    },
                    "url": {
                      "type": "string",
                      "description": "HTTP URL to the CSV file",
                      "title": "URL"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": ["connection_type", "s3_endpoint", "s3_bucket"],
                  "properties": {
                    "connection_type": {
                      "type": "string",
                      "const": "s3",
                      "title": "Connection type"
                    },
                    "s3_endpoint": {
                      "type": "string",
                      "title": "S3 endpoint",
                      "description": "S3 endpoint (including port if required)"
                    },
                    "s3_region": {
                      "type": "string",
                      "title": "S3 region",
                      "description": "Region of the S3 bucket"
                    },
                    "s3_secure": {
                      "title": "Secure",
                      "type": "boolean",
                      "description": "Whether to use HTTPS for S3 access"
                    },
                    "s3_bucket": {
                      "title": "Bucket name",
                      "type": "string",
                      "description": "Bucket the object is in"
                    },
                    "s3_object": {
                      "title": "S3 Object name",
                      "type": "string",
                      "description": "Limit the import to a single object"
                    },
                    "s3_object_prefix": {
                      "title": "S3 Object prefix",
                      "type": "string",
                      "description": "Prefix for object in S3 bucket"
                    }
                  }
                }
              ]
            },
            "autodetect_header": {
              "type": "boolean",
              "title": "Autodetect header",
              "description": "Detect whether the CSV file has a header automatically",
              "default": true
            },
            "autodetect_dialect": {
              "type": "boolean",
              "title": "Autodetect dialect",
              "description": "Detect the CSV file's dialect (separator, quoting characters etc) automatically",
              "default": true
            },
            "autodetect_encoding": {
              "type": "boolean",
              "title": "Autodetect encoding",
              "description": "Detect the CSV file's encoding automatically",
              "default": true
            },
            "autodetect_sample_size": {
              "type": "integer",
              "title": "Sample size",
              "description": "Sample size, in bytes, for encoding/dialect/header detection",
              "default": 65536
            },
            "schema_inference_rows": {
              "type": "integer",
              "title": "Schema inference rows",
              "description": "Number of rows to use for schema inference",
              "default": 100000
            },
            "encoding": {
              "type": "string",
              "title": "Encoding",
              "description": "Encoding of the CSV file",
              "default": "utf-8"
            },
            "ignore_decode_errors": {
              "type": "boolean",
              "title": "Ignore decoding errors",
              "description": "Ignore errors when decoding the file",
              "default": false
            },
            "header": {
              "type": "boolean",
              "description": "First line of the CSV file is its header",
              "default": true
            },
            "delimiter": {
              "title": "Delimiter",
              "type": "string",
              "description": "Character used to separate fields in the file",
              "default": ","
            },
            "quotechar": {
              "title": "Quote character",
              "type": "string",
              "description": "Character used to quote fields",
              "default": "\""
            }
          }
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "s3_access_key": {
              "type": "string",
              "title": "AWS Access Key"
            },
            "s3_secret_key": {
              "type": "string",
              "title": "AWS Secret Access Key"
            }
          }
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            },
            "url": {
              "type": "string",
              "description": "HTTP URL to the CSV file",
              "title": "URL"
            },
            "s3_object": {
              "type": "string",
              "description": "S3 object of the CSV file",
              "title": "S3 object"
            },
            "autodetect_header": {
              "type": "boolean",
              "title": "Autodetect header",
              "description": "Detect whether the CSV file has a header automatically",
              "default": true
            },
            "autodetect_dialect": {
              "type": "boolean",
              "title": "Autodetect dialect",
              "description": "Detect the CSV file's dialect (separator, quoting characters etc) automatically",
              "default": true
            },
            "autodetect_encoding": {
              "type": "boolean",
              "title": "Autodetect encoding",
              "description": "Detect the CSV file's encoding automatically",
              "default": true
            },
            "autodetect_sample_size": {
              "type": "integer",
              "title": "Sample size",
              "description": "Sample size, in bytes, for encoding/dialect/header detection",
              "default": 65536
            },
            "schema_inference_rows": {
              "type": "integer",
              "title": "Schema inference rows",
              "description": "Number of rows to use for schema inference",
              "default": 100000
            },
            "encoding": {
              "type": "string",
              "title": "Encoding",
              "description": "Encoding of the CSV file",
              "default": "utf-8"
            },
            "ignore_decode_errors": {
              "type": "boolean",
              "title": "Ignore decoding errors",
              "description": "Ignore errors when decoding the file",
              "default": false
            },
            "header": {
              "type": "boolean",
              "description": "First line of the CSV file is its header",
              "default": true
            },
            "delimiter": {
              "title": "Delimiter",
              "type": "string",
              "description": "Character used to separate fields in the file",
              "default": ","
            },
            "quotechar": {
              "title": "Quote character",
              "type": "string",
              "description": "Character used to quote fields",
              "default": "\""
            }
          },
          "required": []
        }
      },
      {
        "pluginName": "snowflake",
        "name": "Snowflake",
        "description": "Schema, table or a subquery from a Snowflake database",
        "supportsMount": true,
        "supportsSync": false,
        "supportsLoad": true,
        "marketingSlug": "snowflake-live",
        "canonicalDataSourceName": "snowflake",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "database": {
              "type": "string",
              "title": "Database",
              "description": "Snowflake database name"
            },
            "schema": {
              "type": "string",
              "title": "Schema",
              "description": "Snowflake schema"
            },
            "warehouse": {
              "type": "string",
              "title": "Warehouse",
              "description": "Warehouse name"
            },
            "role": {
              "type": "string",
              "title": "Role",
              "description": "Role"
            },
            "batch_size": {
              "type": "integer",
              "title": "Batch size",
              "description": "Default fetch size for remote queries"
            },
            "envvars": {
              "type": "object",
              "title": "Environment variables",
              "description": "Environment variables to set on the engine side"
            }
          },
          "required": ["database"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "title": "Username",
              "description": "Username"
            },
            "secret": {
              "type": "object",
              "title": "Connection secret",
              "oneOf": [
                {
                  "type": "object",
                  "required": ["secret_type", "password"],
                  "properties": {
                    "secret_type": {
                      "type": "string",
                      "const": "password",
                      "title": "Secret type"
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": "Password"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": ["secret_type", "private_key"],
                  "properties": {
                    "secret_type": {
                      "type": "string",
                      "const": "private_key",
                      "title": "Secret type"
                    },
                    "private_key": {
                      "type": "string",
                      "title": "Private key",
                      "description": "Private key in PEM format"
                    }
                  }
                }
              ],
              "description": "A password or a private key to be used for authentication"
            },
            "account": {
              "type": "string",
              "description": "Account Locator, e.g. xy12345.us-east-2.aws. For more information, see https://docs.snowflake.com/en/user-guide/connecting.html"
            }
          },
          "required": ["username", "account"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            },
            "subquery": {
              "type": "string",
              "title": "Subquery",
              "description": "Subquery for this table to run on the server side"
            }
          },
          "required": []
        }
      },
      {
        "pluginName": "dbt",
        "name": "dbt",
        "description": "Create a Splitgraph repository from a dbt model",
        "supportsMount": false,
        "supportsSync": false,
        "supportsLoad": true,
        "marketingSlug": "dbt",
        "canonicalDataSourceName": "dbt",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "git_branch": {
              "type": "string",
              "title": "Git branch",
              "description": "Branch or commit hash to use for the dbt project.",
              "default": "master"
            },
            "sources": {
              "type": "array",
              "title": "dbt source map",
              "description": "Describe which Splitgraph image to use for each dbt source (defined in sources.yml).",
              "items": {
                "type": "object",
                "properties": {
                  "dbt_source_name": {
                    "type": "string",
                    "title": "Source name",
                    "description": "Source name in the dbt model"
                  },
                  "namespace": {
                    "type": "string",
                    "title": "Namespace"
                  },
                  "repository": {
                    "type": "string",
                    "title": "Repository"
                  },
                  "hash_or_tag": {
                    "type": "string",
                    "title": "Hash or tag",
                    "default": "latest"
                  }
                },
                "required": ["dbt_source_name", "namespace", "repository"]
              }
            }
          }
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            }
          },
          "required": ["git_url"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {}
        }
      },
      {
        "pluginName": "athena",
        "name": "Amazon Athena",
        "description": "Query data in Amazon S3 files and folders",
        "supportsMount": true,
        "supportsSync": false,
        "supportsLoad": true,
        "marketingSlug": "athena-live",
        "canonicalDataSourceName": "athena",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "region_name": {
              "type": "string",
              "title": "S3 region",
              "description": "Region of the S3 bucket"
            },
            "schema_name": {
              "type": "string",
              "title": "Schema",
              "description": "Athena database name"
            },
            "s3_staging_dir": {
              "title": "S3 results folder",
              "type": "string",
              "description": "Folder for storing query output"
            }
          },
          "required": ["region_name", "schema_name", "s3_staging_dir"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "aws_access_key_id": {
              "type": "string",
              "title": "AWS Access Key Id"
            },
            "aws_secret_access_key": {
              "type": "string",
              "title": "AWS Secret Access Key"
            }
          },
          "required": ["aws_access_key_id", "aws_secret_access_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            }
          }
        }
      },
      {
        "pluginName": "bigquery",
        "name": "Google BigQuery",
        "description": "Query data in GCP BigQuery datasets",
        "supportsMount": true,
        "supportsSync": false,
        "supportsLoad": true,
        "marketingSlug": "bigquery-live",
        "canonicalDataSourceName": "bigquery",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "project": {
              "type": "string",
              "title": "GCP project name",
              "description": "Name of the GCP project to use"
            },
            "dataset_name": {
              "type": "string",
              "title": "Big Query dataset",
              "description": "Name of the dataset in Big Query"
            }
          },
          "required": ["project", "dataset_name"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "credentials": {
              "type": "string",
              "title": "GCP credentials",
              "description": "GCP credentials in JSON format"
            }
          }
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "cursor_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Replication cursor",
              "description": "Column(s) to use as a replication cursor. This must be always increasing in the source table and is used to track which rows should be replicated."
            }
          }
        }
      },
      {
        "pluginName": "tap-github",
        "name": "GitHub Singer tap",
        "description": "Wrapper around tap-github",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "tap-github",
        "canonicalDataSourceName": "tap-github",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "repository": {
              "type": "string"
            }
          },
          "required": ["repository"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "access_token": {
              "type": "string"
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object"
        }
      },
      {
        "pluginName": "airbyte-airtable",
        "name": "Airtable",
        "description": "Airbyte connector for Airtable. For more information, see https://docs.airbyte.io/integrations/sources/airtable",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "airtable",
        "canonicalDataSourceName": "airtable",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "base_id": {
              "type": "string",
              "description": "The Base ID to integrate the data from. You can find the Base ID following the link <a href=\"https://airtable.com/api\">Airtable API</a>, log in to your account, select the base you need and find Base ID in the docs.",
              "title": "Base ID",
              "examples": ["app1234567890"]
            },
            "tables": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The list of Tables to integrate.",
              "title": "Tables",
              "examples": ["table 1", "table 2"]
            }
          },
          "required": ["base_id", "tables"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "The API Key for the Airtable account. See the <a href=\"https://support.airtable.com/hc/en-us/articles/219046777-How-do-I-get-my-API-key-\">Support Guide</a> for more information on how to obtain this key.",
              "title": "API Key",
              "examples": ["key1234567890"]
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-amazon-ads",
        "name": "Amazon Ads",
        "description": "Airbyte connector for Amazon Ads. For more information, see https://docs.airbyte.io/integrations/sources/amazon-ads",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "amazon-ads",
        "canonicalDataSourceName": "amazon-ads",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "auth_type": {
              "title": "Auth Type",
              "const": "oauth2.0",
              "order": 0,
              "type": "string"
            },
            "client_id": {
              "title": "Client ID",
              "description": "The client ID of your Amazon Ads developer application. See the <a href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret\">docs</a> for more information.",
              "order": 1,
              "type": "string"
            },
            "region": {
              "title": "Region *",
              "description": "Region to pull data from (EU/NA/FE/SANDBOX). See <a href=\"https://advertising.amazon.com/API/docs/en-us/info/api-overview#api-endpoints\">docs</a> for more details.",
              "enum": ["NA", "EU", "FE", "SANDBOX"],
              "type": "string",
              "default": "NA",
              "order": 4
            },
            "report_wait_timeout": {
              "title": "Report Wait Timeout *",
              "description": "Timeout duration in minutes for Reports. Default is 30 minutes.",
              "default": 30,
              "examples": [30, 120],
              "order": 5,
              "type": "integer"
            },
            "report_generation_max_retries": {
              "title": "Report Generation Maximum Retries *",
              "description": "Maximum retries Airbyte will attempt for fetching report data. Default is 5.",
              "default": 5,
              "examples": [5, 10, 15],
              "order": 6,
              "type": "integer"
            },
            "start_date": {
              "title": "Start Date (Optional)",
              "description": "The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format",
              "examples": ["2022-10-10", "2022-10-22"],
              "order": 7,
              "type": "string"
            },
            "profiles": {
              "title": "Profile IDs (Optional)",
              "description": "Profile IDs you want to fetch data for. See <a href=\"https://advertising.amazon.com/API/docs/en-us/concepts/authorization/profiles\">docs</a> for more details.",
              "order": 8,
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          "required": ["client_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "title": "Client Secret",
              "description": "The client secret of your Amazon Ads developer application. See the <a href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens#retrieve-your-client-id-and-client-secret\">docs</a> for more information.",
              "order": 2,
              "type": "string"
            },
            "refresh_token": {
              "title": "Refresh Token",
              "description": "Amazon Ads refresh token. See the <a href=\"https://advertising.amazon.com/API/docs/en-us/get-started/generate-api-tokens\">docs</a> for more information on how to obtain this token.",
              "order": 3,
              "type": "string"
            }
          },
          "required": ["client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-amazon-seller-partner",
        "name": "Amazon Seller Partner",
        "description": "Airbyte connector for Amazon Seller Partner. For more information, see https://docs.airbyte.io/integrations/sources/amazon-seller-partner",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "amazon-seller-partner",
        "canonicalDataSourceName": "amazon-seller-partner",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "replication_start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string"
            },
            "period_in_days": {
              "title": "Period In Days",
              "description": "Will be used for stream slicing for initial full_refresh sync when no updated state is present for reports that support sliced incremental sync.",
              "examples": ["30", "365"],
              "type": "integer",
              "default": 30
            },
            "report_options": {
              "title": "Report Options",
              "description": "Additional information passed to reports. This varies by report type. Must be a valid json string.",
              "examples": [
                "{\"GET_BRAND_ANALYTICS_SEARCH_TERMS_REPORT\": {\"reportPeriod\": \"WEEK\"}}",
                "{\"GET_SOME_REPORT\": {\"custom\": \"true\"}}"
              ],
              "type": "string"
            },
            "max_wait_seconds": {
              "title": "Max wait time for reports (in seconds)",
              "description": "Sometimes report can take up to 30 minutes to generate. This will set the limit for how long to wait for a successful report.",
              "examples": ["500", "1980"],
              "type": "integer",
              "default": 500
            },
            "aws_environment": {
              "title": "AWSEnvironment",
              "description": "An enumeration.",
              "enum": ["PRODUCTION", "SANDBOX"],
              "type": "string"
            },
            "region": {
              "title": "AWSRegion",
              "description": "An enumeration.",
              "enum": [
                "AE",
                "DE",
                "PL",
                "EG",
                "ES",
                "FR",
                "IN",
                "IT",
                "NL",
                "SA",
                "SE",
                "TR",
                "UK",
                "AU",
                "JP",
                "SG",
                "US",
                "BR",
                "CA",
                "MX",
                "GB"
              ],
              "type": "string"
            }
          },
          "required": ["replication_start_date", "aws_environment", "region"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "refresh_token": {
              "title": "Refresh Token",
              "description": "The Refresh Token obtained via OAuth flow authorization.",
              "type": "string"
            },
            "lwa_app_id": {
              "title": "LwA App Id",
              "description": "Your Login with Amazon App ID",
              "type": "string"
            },
            "lwa_client_secret": {
              "title": "LwA Client Secret",
              "description": "Your Login with Amazon Client Secret.",
              "type": "string"
            },
            "aws_access_key": {
              "title": "AWS Access Key",
              "description": "Specifies the AWS access key used as part of the credentials to authenticate the user.",
              "type": "string"
            },
            "aws_secret_key": {
              "title": "AWS Secret Access Key",
              "description": "Specifies the AWS secret key used as part of the credentials to authenticate the user.",
              "type": "string"
            },
            "role_arn": {
              "title": "Role ARN",
              "description": "Specifies the Amazon Resource Name (ARN) of an IAM user or role that you want to use to perform operations requested using this profile. (Needs permission to 'Assume Role' STS).",
              "type": "string"
            }
          },
          "required": [
            "refresh_token",
            "lwa_app_id",
            "lwa_client_secret",
            "aws_access_key",
            "aws_secret_key",
            "role_arn"
          ]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-amazon-sqs",
        "name": "Amazon SQS",
        "description": "Airbyte connector for Amazon SQS. For more information, see https://docs.airbyte.io/integrations/sources/amazon-sqs",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "amazon-sqs",
        "canonicalDataSourceName": "amazon-sqs",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "queue_url": {
              "title": "Queue URL",
              "description": "URL of the SQS Queue",
              "type": "string",
              "examples": [
                "https://sqs.eu-west-1.amazonaws.com/1234567890/my-example-queue"
              ],
              "order": 0
            },
            "region": {
              "title": "AWS Region",
              "description": "AWS Region of the SQS Queue",
              "type": "string",
              "enum": [
                "us-east-1",
                "us-east-2",
                "us-west-1",
                "us-west-2",
                "af-south-1",
                "ap-east-1",
                "ap-south-1",
                "ap-northeast-1",
                "ap-northeast-2",
                "ap-northeast-3",
                "ap-southeast-1",
                "ap-southeast-2",
                "ca-central-1",
                "cn-north-1",
                "cn-northwest-1",
                "eu-central-1",
                "eu-north-1",
                "eu-south-1",
                "eu-west-1",
                "eu-west-2",
                "eu-west-3",
                "sa-east-1",
                "me-south-1",
                "us-gov-east-1",
                "us-gov-west-1"
              ],
              "order": 1
            },
            "delete_messages": {
              "title": "Delete Messages After Read",
              "description": "If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail. ",
              "type": "boolean",
              "default": false,
              "order": 2
            },
            "max_batch_size": {
              "title": "Max Batch Size",
              "description": "Max amount of messages to get in one batch (10 max)",
              "type": "integer",
              "examples": ["5"],
              "order": 3
            },
            "max_wait_time": {
              "title": "Max Wait Time",
              "description": "Max amount of time in seconds to wait for messages in a single poll (20 max)",
              "type": "integer",
              "examples": ["5"],
              "order": 4
            },
            "attributes_to_return": {
              "title": "Message Attributes To Return",
              "description": "Comma separated list of Mesage Attribute names to return",
              "type": "string",
              "examples": ["attr1,attr2"],
              "order": 5
            },
            "visibility_timeout": {
              "title": "Message Visibility Timeout",
              "description": "Modify the Visibility Timeout of the individual message from the Queue's default (seconds).",
              "type": "integer",
              "examples": ["15"],
              "order": 6
            }
          },
          "required": ["queue_url", "region", "delete_messages"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_key": {
              "title": "AWS IAM Access Key ID",
              "description": "The Access Key ID of the AWS IAM Role to use for pulling messages",
              "type": "string",
              "examples": ["xxxxxHRNxxx3TBxxxxxx"],
              "order": 7
            },
            "secret_key": {
              "title": "AWS IAM Secret Key",
              "description": "The Secret Key of the AWS IAM Role to use for pulling messages",
              "type": "string",
              "examples": ["hu+qE5exxxxT6o/ZrKsxxxxxxBhxxXLexxxxxVKz"],
              "order": 8
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-amplitude",
        "name": "Amplitude",
        "description": "Airbyte connector for Amplitude. For more information, see https://docs.airbyte.io/integrations/sources/amplitude",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "amplitude",
        "canonicalDataSourceName": "amplitude",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Replication Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-01-25T00:00:00Z"]
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Amplitude API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/amplitude#setup-guide\">setup guide</a> for more information on how to obtain this key."
            },
            "secret_key": {
              "type": "string",
              "title": "Secret Key",
              "description": "Amplitude Secret Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/amplitude#setup-guide\">setup guide</a> for more information on how to obtain this key."
            }
          },
          "required": ["api_key", "secret_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-apify-dataset",
        "name": "Apify Dataset",
        "description": "Airbyte connector for Apify Dataset. For more information, see https://docs.airbyte.io/integrations/sources/apify-dataset",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "apify-dataset",
        "canonicalDataSourceName": "apify-dataset",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "datasetId": {
              "type": "string",
              "title": "Dataset ID",
              "description": "ID of the dataset you would like to load to Airbyte."
            },
            "clean": {
              "type": "boolean",
              "title": "Clean",
              "description": "If set to true, only clean items will be downloaded from the dataset. See description of what clean means in <a href=\"https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items\">Apify API docs</a>. If not sure, set clean to false."
            }
          },
          "required": ["datasetId"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-appstore-singer",
        "name": "Appstore",
        "description": "Airbyte connector for Appstore. For more information, see https://docs.airbyte.io/integrations/sources/appstore",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "appstore-singer",
        "canonicalDataSourceName": "appstore-singer",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "key_id": {
              "type": "string",
              "title": "Key ID",
              "description": "Appstore Key ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\">docs</a> for more information on how to obtain this key."
            },
            "issuer_id": {
              "type": "string",
              "title": "Issuer ID",
              "description": "Appstore Issuer ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\">docs</a> for more information on how to obtain this ID."
            },
            "vendor": {
              "type": "string",
              "title": "Vendor ID",
              "description": "Appstore Vendor ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\">docs</a> for more information on how to obtain this ID."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["key_id", "issuer_id", "vendor", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "private_key": {
              "type": "string",
              "title": "Private Key",
              "description": "Appstore Private Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/appstore\">docs</a> for more information on how to obtain this key.",
              "multiline": true
            }
          },
          "required": ["private_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-asana",
        "name": "Asana",
        "description": "Airbyte connector for Asana. For more information, see https://docs.airbyte.io/integrations/sources/asana",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "asana",
        "canonicalDataSourceName": "asana",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate to Github",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate with Personal Access Token",
                  "required": ["personal_access_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "title": "Credentials title",
                      "description": "PAT Credentials",
                      "const": "PAT Credentials"
                    },
                    "personal_access_token": {
                      "type": "string",
                      "title": "Personal Access Token",
                      "description": "Asana Personal Access Token (generate yours <a href=\"https://app.asana.com/0/developer-console\">here</a>)."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-aws-cloudtrail",
        "name": "AWS CloudTrail",
        "description": "Airbyte connector for AWS CloudTrail. For more information, see https://docs.airbyte.io/integrations/sources/aws-cloudtrail",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "aws-cloudtrail",
        "canonicalDataSourceName": "aws-cloudtrail",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "aws_region_name": {
              "type": "string",
              "title": "Region Name",
              "description": "The default AWS Region to use, for example, us-west-1 or us-west-2. When specifying a Region inline during client initialization, this property is named region_name."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date you would like to replicate data. Data in AWS CloudTrail is available for last 90 days only. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "default": "1970-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          "required": ["aws_region_name", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "aws_key_id": {
              "type": "string",
              "title": "Key ID",
              "description": "AWS CloudTrail Access Key ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/aws-cloudtrail\">docs</a> for more information on how to obtain this key."
            },
            "aws_secret_key": {
              "type": "string",
              "title": "Secret Key",
              "description": "AWS CloudTrail Access Key ID. See the <a href=\"https://docs.airbyte.io/integrations/sources/aws-cloudtrail\">docs</a> for more information on how to obtain this key."
            }
          },
          "required": ["aws_key_id", "aws_secret_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-azure-table",
        "name": "Azure Table Storage",
        "description": "Airbyte connector for Azure Table Storage. For more information, see https://docs.airbyte.io/integrations/sources/azure-table",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "azure-table",
        "canonicalDataSourceName": "azure-table",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "storage_account_name": {
              "title": "Account Name",
              "type": "string",
              "description": "The name of your storage account.",
              "order": 0
            },
            "storage_endpoint_suffix": {
              "title": "Endpoint Suffix",
              "type": "string",
              "description": "Azure Table Storage service account URL suffix. See the <a href=\"https://docs.airbyte.io/integrations/sources/azure-table\">docs</a> for more information on how to obtain endpoint suffix",
              "order": 2,
              "default": "core.windows.net",
              "examples": ["core.windows.net", "core.chinacloudapi.cn"]
            }
          },
          "required": ["storage_account_name"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "storage_access_key": {
              "title": "Access Key",
              "type": "string",
              "description": "Azure Table Storage Access Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/azure-table\">docs</a> for more information on how to obtain this key.",
              "order": 1
            }
          },
          "required": ["storage_access_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-bamboo-hr",
        "name": "BambooHR",
        "description": "Airbyte connector for BambooHR. For more information, see https://docs.airbyte.io/integrations/sources/bamboo-hr",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "bamboo-hr",
        "canonicalDataSourceName": "bamboo-hr",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "subdomain": {
              "type": "string",
              "description": "Sub Domain of bamboo hr"
            },
            "custom_reports_fields": {
              "type": "string",
              "default": "",
              "description": "Comma-separated list of fields to include in custom reports."
            },
            "custom_reports_include_default_fields": {
              "type": "boolean",
              "default": true,
              "description": "If true, the custom reports endpoint will include the default fields defined here: https://documentation.bamboohr.com/docs/list-of-field-names."
            }
          },
          "required": ["subdomain"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "Api key of bamboo hr"
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-bigcommerce",
        "name": "BigCommerce",
        "description": "Airbyte connector for BigCommerce. For more information, see https://docs.airbyte.io/integrations/sources/bigcommerce",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "bigcommerce",
        "canonicalDataSourceName": "bigcommerce",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date you would like to replicate data. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "store_hash": {
              "type": "string",
              "title": "Store Hash",
              "description": "The hash code of the store. For https://api.bigcommerce.com/stores/HASH_CODE/v3/, The store's hash code is 'HASH_CODE'."
            }
          },
          "required": ["start_date", "store_hash"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "Access Token for making authenticated requests."
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-bigquery",
        "name": "Google BigQuery",
        "description": "Airbyte connector for Google BigQuery. For more information, see https://docs.airbyte.io/integrations/sources/bigquery",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "bigquery",
        "canonicalDataSourceName": "bigquery",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "project_id": {
              "type": "string",
              "description": "The GCP project ID for the project containing the target BigQuery dataset.",
              "title": "Project ID"
            },
            "dataset_id": {
              "type": "string",
              "description": "The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.",
              "title": "Default Dataset ID"
            }
          },
          "required": ["project_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials_json": {
              "type": "string",
              "description": "The contents of your Service Account Key JSON file. See the <a href=\"https://docs.airbyte.io/integrations/sources/bigquery#setup-the-bigquery-source-in-airbyte\">docs</a> for more information on how to obtain this key.",
              "title": "Credentials JSON"
            }
          },
          "required": ["credentials_json"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-bing-ads",
        "name": "Bing Ads",
        "description": "Airbyte connector for Bing Ads. For more information, see https://docs.airbyte.io/integrations/sources/bing-ads",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "bing-ads",
        "canonicalDataSourceName": "bing-ads",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "accounts": {
              "title": "Accounts to replicate data from",
              "type": "object",
              "description": "",
              "oneOf": [
                {
                  "title": "All Accounts",
                  "additionalProperties": false,
                  "description": "Replicate data from all accounts to which you have access.",
                  "required": ["selection_strategy"],
                  "properties": {
                    "selection_strategy": {
                      "type": "string",
                      "const": "all"
                    }
                  }
                },
                {
                  "title": "Specific Accounts",
                  "additionalProperties": false,
                  "description": "Fetch data for subset of account IDs.",
                  "required": ["ids", "selection_strategy"],
                  "properties": {
                    "selection_strategy": {
                      "type": "string",
                      "const": "subset"
                    },
                    "ids": {
                      "type": "array",
                      "title": "Account IDs",
                      "description": "List of the account IDs from which data will be replicated.",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1,
                      "uniqueItems": true
                    }
                  }
                }
              ]
            },
            "customer_id": {
              "type": "string",
              "title": "Customer ID",
              "description": "Your Bing Customer ID. See the \"Getting Started\" section in <a href=\"https://docs.airbyte.com/integrations/sources/bing-ads\">the docs</a> for information on how to obtain this ID",
              "order": 6
            },
            "user_id": {
              "type": "string",
              "title": "Account ID",
              "description": "Bing Ads Account ID. See the \"Getting Started\" section in <a href=\"https://docs.airbyte.com/integrations/sources/bing-ads\">the docs</a> for information on how to obtain this ID",
              "order": 7
            },
            "reports_start_date": {
              "type": "string",
              "title": "Reports replication start date",
              "format": "date",
              "default": "2020-01-01",
              "description": "The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format.",
              "order": 8
            },
            "hourly_reports": {
              "title": "Enable hourly-aggregate reports",
              "type": "boolean",
              "description": "Toggle this to enable replicating reports aggregated using an hourly time window. More information about report aggregation can be found in <a href=\"https://docs.airbyte.com/integrations/sources/bing-ads/#report-aggregation\">the docs</a>.",
              "default": false
            },
            "daily_reports": {
              "title": "Enable daily-aggregate reports",
              "type": "boolean",
              "description": "Toggle this to enable replicating reports aggregated using a daily time window. More information about report aggregation can be found in <a href=\"https://docs.airbyte.com/integrations/sources/bing-ads/#report-aggregation\">the docs</a>.",
              "default": false
            },
            "weekly_reports": {
              "title": "Enable weekly-aggregate reports",
              "type": "boolean",
              "description": "Toggle this to enable replicating reports aggregated using a weekly time window running from Sunday to Saturday. More information about report aggregation can be found in <a href=\"https://docs.airbyte.com/integrations/sources/bing-ads/#report-aggregation\">the docs</a>.",
              "default": false
            },
            "monthly_reports": {
              "title": "Enable monthly-aggregate reports",
              "type": "boolean",
              "description": "Toggle this to enable replicating reports aggregated using a monthly time window. More information about report aggregation can be found in <a href=\"https://docs.airbyte.com/integrations/sources/bing-ads/#report-aggregation\">the docs</a>.",
              "default": false
            }
          },
          "required": [
            "accounts",
            "customer_id",
            "user_id",
            "reports_start_date",
            "hourly_reports",
            "daily_reports",
            "weekly_reports",
            "monthly_reports"
          ]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Microsoft Advertising developer application.",
              "order": 0
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Microsoft Advertising developer application.",
              "order": 1
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "Refresh Token to renew the expired Access Token.",
              "order": 2
            },
            "developer_token": {
              "type": "string",
              "title": "Developer Token",
              "description": "Developer token associated with user.",
              "order": 3
            },
            "tenant_id": {
              "type": "string",
              "title": "Tenant ID",
              "description": "The Tenant ID of your Microsoft Advertising developer application. Set this to \"common\" unless you know you need a different value.",
              "default": "common",
              "order": 4
            },
            "redirect_uri": {
              "type": "string",
              "title": "Redirect URI (Optional)",
              "description": "The Redirect URI of your Microsoft Advertising developer application. Leave this empty unless you know that you need it.",
              "default": "",
              "order": 5
            }
          },
          "required": [
            "client_id",
            "client_secret",
            "refresh_token",
            "developer_token"
          ]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-braintree",
        "name": "Braintree",
        "description": "Airbyte connector for Braintree. For more information, see https://docs.airbyte.io/integrations/sources/braintree",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "braintree",
        "canonicalDataSourceName": "braintree",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "merchant_id": {
              "title": "Merchant ID",
              "description": "The unique identifier for your entire gateway account. See the <a href=\"https://docs.airbyte.io/integrations/sources/braintree\">docs</a> for more information on how to obtain this ID.",
              "name": "Merchant ID",
              "type": "string"
            },
            "public_key": {
              "title": "Public Key",
              "description": "Braintree Public Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/braintree\">docs</a> for more information on how to obtain this key.",
              "name": "Public Key",
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "name": "Start Date",
              "examples": ["2020", "2020-12-30", "2020-11-22 20:20:05"],
              "type": "string",
              "format": "date-time"
            },
            "environment": {
              "title": "Environment",
              "description": "Environment specifies where the data will come from.",
              "name": "Environment",
              "examples": ["sandbox", "production", "qa", "development"],
              "enum": ["Development", "Sandbox", "Qa", "Production"],
              "type": "string"
            }
          },
          "required": ["merchant_id", "public_key", "environment"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "private_key": {
              "title": "Private Key",
              "description": "Braintree Private Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/braintree\">docs</a> for more information on how to obtain this key.",
              "name": "Private Key",
              "type": "string"
            }
          },
          "required": ["private_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-cart",
        "name": "Cart.com",
        "description": "Airbyte connector for Cart.com. For more information, see https://docs.airbyte.io/integrations/sources/cart",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "cart",
        "canonicalDataSourceName": "cart",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "store_name": {
              "type": "string",
              "title": "Store Name",
              "description": "The name of Cart.com Online Store. All API URLs start with https://[mystorename.com]/api/v1/, where [mystorename.com] is the domain name of your store."
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate the data",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-01T00:00:00Z"]
            }
          },
          "required": ["store_name", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "Access Token for making authenticated requests."
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-chargebee",
        "name": "Chargebee",
        "description": "Airbyte connector for Chargebee. For more information, see https://docs.airbyte.io/integrations/sources/chargebee",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "chargebee",
        "canonicalDataSourceName": "chargebee",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "site": {
              "type": "string",
              "title": "Site",
              "description": "The site prefix for your Chargebee instance.",
              "examples": ["airbyte-test"]
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-01-25T00:00:00Z"]
            },
            "product_catalog": {
              "title": "Product Catalog",
              "type": "string",
              "description": "Product Catalog version of your Chargebee site. Instructions on how to find your version you may find <a href=\"https://apidocs.chargebee.com/docs/api?prod_cat_ver=2\">here</a> under `API Version` section.",
              "enum": ["1.0", "2.0"]
            }
          },
          "required": ["site", "start_date", "product_catalog"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "site_api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Chargebee API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/chargebee\">docs</a> for more information on how to obtain this key.",
              "examples": ["test_3yzfanAXF66USdWC9wQcM555DQJkSYoppu"]
            }
          },
          "required": ["site_api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-chargify",
        "name": "Chargify",
        "description": "Airbyte connector for Chargify. For more information, see https://docs.airbyte.io/integrations/sources/chargify",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "chargify",
        "canonicalDataSourceName": "chargify",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain": {
              "type": "string",
              "description": "Chargify domain. Normally this domain follows the following format companyname.chargify.com"
            }
          },
          "required": ["domain"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "Chargify API Key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-chartmogul",
        "name": "Chartmogul",
        "description": "Airbyte connector for Chartmogul. For more information, see https://docs.airbyte.io/integrations/sources/chartmogul",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "chartmogul",
        "canonicalDataSourceName": "chartmogul",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. When feasible, any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 1
            },
            "interval": {
              "type": "string",
              "description": "Some APIs such as <a href=\"https://dev.chartmogul.com/reference/endpoint-overview-metrics-api\">Metrics</a> require intervals to cluster data.",
              "enum": ["day", "week", "month", "quarter"],
              "default": "month",
              "order": 2
            }
          },
          "required": ["start_date", "interval"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "Chartmogul API key",
              "order": 0
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-clickhouse",
        "name": "ClickHouse",
        "description": "Airbyte connector for ClickHouse. For more information, see https://docs.airbyte.io/integrations/destinations/clickhouse",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "clickhouse",
        "canonicalDataSourceName": "clickhouse",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "description": "The host endpoint of the Clickhouse cluster.",
              "title": "Host",
              "type": "string"
            },
            "port": {
              "description": "The port of the database.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8123,
              "examples": ["8123"]
            },
            "database": {
              "description": "The name of the database.",
              "title": "Database",
              "type": "string",
              "examples": ["default"]
            },
            "username": {
              "description": "The username which is used to access the database.",
              "title": "Username",
              "type": "string"
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": true
            }
          },
          "required": ["host", "port", "database", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "description": "The password associated with this username.",
              "title": "Password",
              "type": "string"
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-close-com",
        "name": "Close.com",
        "description": "Airbyte connector for Close.com. For more information, see https://docs.airbyte.io/integrations/sources/close-com",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "close-com",
        "canonicalDataSourceName": "close-com",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "description": "The start date to sync data. Leave blank for full sync. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "default": "2021-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "Close.com API key (usually starts with 'api_'; find yours <a href=\"https://app.close.com/settings/api/\">here</a>)."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-cockroachdb",
        "name": "Cockroachdb",
        "description": "Airbyte connector for Cockroachdb. For more information, see https://docs.airbyte.io/integrations/sources/cockroachdb",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "cockroachdb",
        "canonicalDataSourceName": "cockroachdb",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5432,
              "examples": ["5432"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "ssl": {
              "title": "Connect using SSL",
              "description": "Encrypt client/server communications for increased security.",
              "type": "boolean",
              "default": false,
              "order": 5
            }
          },
          "required": ["host", "port", "database", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "order": 4
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-commercetools",
        "name": "Commercetools",
        "description": "Airbyte connector for Commercetools. For more information, see https://docs.airbyte.io/integrations/sources/commercetools",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "commercetools",
        "canonicalDataSourceName": "commercetools",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "region": {
              "type": "string",
              "description": "The region of the platform.",
              "examples": ["us-central1", "australia-southeast1"]
            },
            "host": {
              "type": "string",
              "enum": ["gcp", "aws"],
              "description": "The cloud provider your shop is hosted. See: https://docs.commercetools.com/api/authorization"
            },
            "start_date": {
              "type": "string",
              "description": "The date you would like to replicate data. Format: YYYY-MM-DD.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "project_key": {
              "type": "string",
              "description": "The project key"
            }
          },
          "required": ["region", "host", "start_date", "project_key"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_id": {
              "type": "string",
              "description": "Id of API Client."
            },
            "client_secret": {
              "type": "string",
              "description": "The password of secret of API Client."
            }
          },
          "required": ["client_id", "client_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-confluence",
        "name": "Confluence",
        "description": "Airbyte connector for Confluence. For more information, see https://docs.airbyte.io/integrations/sources/confluence",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "confluence",
        "canonicalDataSourceName": "confluence",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain_name": {
              "type": "string",
              "description": "Your Confluence domain name",
              "examples": ["example.atlassian.net"]
            },
            "email": {
              "type": "string",
              "description": "Your Confluence login email",
              "examples": ["abc@example.com"]
            }
          },
          "required": ["domain_name", "email"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "type": "string",
              "description": "Please follow the Jira confluence for generating an API token: https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/"
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-db2",
        "name": "IBM Db2",
        "description": "Airbyte connector for IBM Db2. For more information, see https://docs.airbyte.io/integrations/sources/db2",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "db2",
        "canonicalDataSourceName": "db2",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "description": "Host of the Db2.",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 8123,
              "examples": ["8123"],
              "order": 1
            },
            "db": {
              "description": "Name of the database.",
              "type": "string",
              "examples": ["default"],
              "order": 2
            },
            "username": {
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            }
          },
          "required": ["host", "port", "db", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "description": "Password associated with the username.",
              "type": "string",
              "order": 4
            },
            "encryption": {
              "title": "Encryption",
              "type": "object",
              "description": "Encryption method to use when communicating with the database",
              "order": 5,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "additionalProperties": false,
                  "description": "Data transfer will not be encrypted.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "unencrypted",
                      "enum": ["unencrypted"],
                      "default": "unencrypted"
                    }
                  }
                },
                {
                  "title": "TLS Encrypted (verify certificate)",
                  "additionalProperties": false,
                  "description": "Verify and use the cert provided by the server.",
                  "required": ["encryption_method", "ssl_certificate"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate",
                      "enum": ["encrypted_verify_certificate"],
                      "default": "encrypted_verify_certificate"
                    },
                    "ssl_certificate": {
                      "title": "SSL PEM file",
                      "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations",
                      "type": "string",
                      "multiline": true
                    },
                    "key_store_password": {
                      "title": "Key Store Password. This field is optional. If you do not fill in this field, the password will be randomly generated.",
                      "description": "Key Store Password",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "required": ["password", "encryption"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-delighted",
        "name": "Delighted",
        "description": "Airbyte connector for Delighted. For more information, see https://docs.airbyte.io/integrations/sources/delighted",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "delighted",
        "canonicalDataSourceName": "delighted",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "since": {
              "type": "integer",
              "description": "An Unix timestamp to retrieve records created on or after this time.",
              "examples": [1625328167]
            }
          },
          "required": ["since"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "A Delighted API key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-dixa",
        "name": "Dixa",
        "description": "Airbyte connector for Dixa. For more information, see https://docs.airbyte.io/integrations/sources/dixa",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "dixa",
        "canonicalDataSourceName": "dixa",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "description": "The connector pulls records updated from this date onwards.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            },
            "batch_size": {
              "type": "integer",
              "description": "Number of days to batch into one request. Max 31.",
              "pattern": "^[0-9]{1,2}$",
              "examples": [1, 31],
              "default": 31
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "type": "string",
              "description": "Dixa API token"
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-drift",
        "name": "Drift",
        "description": "Airbyte connector for Drift. For more information, see https://docs.airbyte.io/integrations/sources/drift",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "drift",
        "canonicalDataSourceName": "drift",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "title": "Access Token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "access_token",
                      "enum": ["access_token"],
                      "default": "access_token",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "Drift Access Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/drift\">docs</a> for more information on how to generate this key."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-exchange-rates",
        "name": "Exchange Rates Api",
        "description": "Airbyte connector for Exchange Rates Api. For more information, see https://docs.airbyte.io/integrations/sources/exchangeratesapi",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "exchange-rates",
        "canonicalDataSourceName": "exchange-rates",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "description": "Start getting data from that date.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["YYYY-MM-DD"]
            },
            "base": {
              "type": "string",
              "description": "ISO reference currency. See <a href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\">here</a>. Free plan doesn't support Source Currency Switching, default base currency is EUR",
              "examples": ["EUR", "USD"]
            },
            "ignore_weekends": {
              "type": "boolean",
              "description": "Ignore weekends? (Exchanges don't run on weekends)",
              "default": true
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_key": {
              "type": "string",
              "description": "Your API Access Key. See <a href=\"https://exchangeratesapi.io/documentation/\">here</a>. The key is case sensitive."
            }
          },
          "required": ["access_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-facebook-marketing",
        "name": "Facebook Marketing",
        "description": "Airbyte connector for Facebook Marketing. For more information, see https://docs.airbyte.io/integrations/sources/facebook-marketing",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "facebook-marketing",
        "canonicalDataSourceName": "facebook-marketing",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "account_id": {
              "title": "Account ID",
              "description": "The Facebook Ad account ID to use when pulling data from the Facebook Marketing API.",
              "order": 0,
              "examples": ["111111111111111"],
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "order": 1,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            },
            "end_date": {
              "title": "End Date",
              "description": "The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between start_date and this date will be replicated. Not setting this option will result in always syncing the latest data.",
              "order": 2,
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-26T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            },
            "include_deleted": {
              "title": "Include Deleted",
              "description": "Include data from deleted Campaigns, Ads, and AdSets",
              "default": false,
              "order": 4,
              "type": "boolean"
            },
            "fetch_thumbnail_images": {
              "title": "Fetch Thumbnail Images",
              "description": "In each Ad Creative, fetch the thumbnail_url and store the result in thumbnail_data_url",
              "default": false,
              "order": 5,
              "type": "boolean"
            },
            "custom_insights": {
              "title": "Custom Insights",
              "description": "A list which contains insights entries, each entry must have a name and can contains fields, breakdowns or action_breakdowns)",
              "order": 6,
              "type": "array",
              "items": {
                "title": "InsightConfig",
                "description": "Config for custom insights",
                "type": "object",
                "properties": {
                  "name": {
                    "title": "Name",
                    "description": "The name value of insight",
                    "type": "string"
                  },
                  "fields": {
                    "title": "Fields",
                    "description": "A list of chosen fields for fields parameter",
                    "default": [],
                    "type": "array",
                    "items": {
                      "title": "ValidEnums",
                      "description": "Generic enumeration.\n\nDerive from this class to define new enumerations.",
                      "enum": [
                        "account_currency",
                        "account_id",
                        "account_name",
                        "action_values",
                        "actions",
                        "ad_bid_value",
                        "ad_click_actions",
                        "ad_id",
                        "ad_impression_actions",
                        "ad_name",
                        "adset_bid_value",
                        "adset_end",
                        "adset_id",
                        "adset_name",
                        "adset_start",
                        "age_targeting",
                        "attribution_setting",
                        "auction_bid",
                        "auction_competitiveness",
                        "auction_max_competitor_bid",
                        "buying_type",
                        "campaign_id",
                        "campaign_name",
                        "canvas_avg_view_percent",
                        "canvas_avg_view_time",
                        "catalog_segment_actions",
                        "catalog_segment_value",
                        "catalog_segment_value_mobile_purchase_roas",
                        "catalog_segment_value_omni_purchase_roas",
                        "catalog_segment_value_website_purchase_roas",
                        "clicks",
                        "conversion_rate_ranking",
                        "conversion_values",
                        "conversions",
                        "converted_product_quantity",
                        "converted_product_value",
                        "cost_per_15_sec_video_view",
                        "cost_per_2_sec_continuous_video_view",
                        "cost_per_action_type",
                        "cost_per_ad_click",
                        "cost_per_conversion",
                        "cost_per_dda_countby_convs",
                        "cost_per_estimated_ad_recallers",
                        "cost_per_inline_link_click",
                        "cost_per_inline_post_engagement",
                        "cost_per_one_thousand_ad_impression",
                        "cost_per_outbound_click",
                        "cost_per_thruplay",
                        "cost_per_unique_action_type",
                        "cost_per_unique_click",
                        "cost_per_unique_conversion",
                        "cost_per_unique_inline_link_click",
                        "cost_per_unique_outbound_click",
                        "cpc",
                        "cpm",
                        "cpp",
                        "created_time",
                        "ctr",
                        "date_start",
                        "date_stop",
                        "dda_countby_convs",
                        "dda_results",
                        "engagement_rate_ranking",
                        "estimated_ad_recall_rate",
                        "estimated_ad_recall_rate_lower_bound",
                        "estimated_ad_recall_rate_upper_bound",
                        "estimated_ad_recallers",
                        "estimated_ad_recallers_lower_bound",
                        "estimated_ad_recallers_upper_bound",
                        "frequency",
                        "full_view_impressions",
                        "full_view_reach",
                        "gender_targeting",
                        "impressions",
                        "inline_link_click_ctr",
                        "inline_link_clicks",
                        "inline_post_engagement",
                        "instant_experience_clicks_to_open",
                        "instant_experience_clicks_to_start",
                        "instant_experience_outbound_clicks",
                        "interactive_component_tap",
                        "labels",
                        "location",
                        "mobile_app_purchase_roas",
                        "objective",
                        "optimization_goal",
                        "outbound_clicks",
                        "outbound_clicks_ctr",
                        "place_page_name",
                        "purchase_roas",
                        "qualifying_question_qualify_answer_rate",
                        "quality_ranking",
                        "quality_score_ectr",
                        "quality_score_ecvr",
                        "quality_score_organic",
                        "reach",
                        "social_spend",
                        "spend",
                        "total_postbacks",
                        "unique_actions",
                        "unique_clicks",
                        "unique_conversions",
                        "unique_ctr",
                        "unique_inline_link_click_ctr",
                        "unique_inline_link_clicks",
                        "unique_link_clicks_ctr",
                        "unique_outbound_clicks",
                        "unique_outbound_clicks_ctr",
                        "unique_video_continuous_2_sec_watched_actions",
                        "unique_video_view_15_sec",
                        "updated_time",
                        "video_15_sec_watched_actions",
                        "video_30_sec_watched_actions",
                        "video_avg_time_watched_actions",
                        "video_continuous_2_sec_watched_actions",
                        "video_p100_watched_actions",
                        "video_p25_watched_actions",
                        "video_p50_watched_actions",
                        "video_p75_watched_actions",
                        "video_p95_watched_actions",
                        "video_play_actions",
                        "video_play_curve_actions",
                        "video_play_retention_0_to_15s_actions",
                        "video_play_retention_20_to_60s_actions",
                        "video_play_retention_graph_actions",
                        "video_thruplay_watched_actions",
                        "video_time_watched_actions",
                        "website_ctr",
                        "website_purchase_roas",
                        "wish_bid"
                      ]
                    }
                  },
                  "breakdowns": {
                    "title": "Breakdowns",
                    "description": "A list of chosen breakdowns for breakdowns",
                    "default": [],
                    "type": "array",
                    "items": {
                      "title": "ValidBreakdowns",
                      "description": "Generic enumeration.\n\nDerive from this class to define new enumerations.",
                      "enum": [
                        "ad_format_asset",
                        "age",
                        "app_id",
                        "body_asset",
                        "call_to_action_asset",
                        "country",
                        "description_asset",
                        "device_platform",
                        "dma",
                        "frequency_value",
                        "gender",
                        "hourly_stats_aggregated_by_advertiser_time_zone",
                        "hourly_stats_aggregated_by_audience_time_zone",
                        "image_asset",
                        "impression_device",
                        "link_url_asset",
                        "place_page_id",
                        "platform_position",
                        "product_id",
                        "publisher_platform",
                        "region",
                        "skan_conversion_id",
                        "title_asset",
                        "video_asset"
                      ]
                    }
                  },
                  "action_breakdowns": {
                    "title": "Action Breakdowns",
                    "description": "A list of chosen action_breakdowns for action_breakdowns",
                    "default": [],
                    "type": "array",
                    "items": {
                      "title": "ValidActionBreakdowns",
                      "description": "Generic enumeration.\n\nDerive from this class to define new enumerations.",
                      "enum": [
                        "action_canvas_component_name",
                        "action_carousel_card_id",
                        "action_carousel_card_name",
                        "action_destination",
                        "action_device",
                        "action_reaction",
                        "action_target_id",
                        "action_type",
                        "action_video_sound",
                        "action_video_type"
                      ]
                    }
                  },
                  "time_increment": {
                    "title": "Time Increment",
                    "description": "Time window in days by which to aggregate statistics. The sync will be chunked into N day intervals, where N is the number of days you specified. For example, if you set this value to 7, then all statistics will be reported as 7-day aggregates by starting from the start_date. If the start and end dates are October 1st and October 30th, then the connector will output 5 records: 01 - 06, 07 - 13, 14 - 20, 21 - 27, and 28 - 30 (3 days only).",
                    "default": 1,
                    "exclusiveMaximum": 90,
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  "start_date": {
                    "title": "Start Date",
                    "description": "The date from which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z.",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
                    "examples": ["2017-01-25T00:00:00Z"],
                    "type": "string",
                    "format": "date-time"
                  },
                  "end_date": {
                    "title": "End Date",
                    "description": "The date until which you'd like to replicate data for this stream, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this date will be replicated. Not setting this option will result in always syncing the latest data.",
                    "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
                    "examples": ["2017-01-26T00:00:00Z"],
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": ["name"]
              }
            },
            "page_size": {
              "title": "Page Size of Requests",
              "description": "Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.",
              "default": 100,
              "order": 7,
              "exclusiveMinimum": 0,
              "type": "integer"
            }
          },
          "required": ["account_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "title": "Access Token",
              "description": "The value of the access token generated. See the <a href=\"https://docs.airbyte.io/integrations/sources/facebook-marketing\">docs</a> for more information",
              "order": 3,
              "type": "string"
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-facebook-pages",
        "name": "Facebook Pages",
        "description": "Airbyte connector for Facebook Pages. For more information, see https://docs.airbyte.io/integrations/sources/facebook-pages",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "facebook-pages",
        "canonicalDataSourceName": "facebook-pages",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "page_id": {
              "type": "string",
              "title": "Page ID",
              "description": "Page ID"
            }
          },
          "required": ["page_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "type": "string",
              "title": "Page Access Token",
              "description": "Facebook Page Access Token"
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-file",
        "name": "File",
        "description": "Airbyte connector for File. For more information, see https://docs.airbyte.io/integrations/sources/file",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "file",
        "canonicalDataSourceName": "file",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "dataset_name": {
              "type": "string",
              "title": "Dataset Name",
              "description": "The Name of the final table to replicate this file into (should include letters, numbers dash and underscores only)."
            },
            "format": {
              "type": "string",
              "enum": ["csv", "json", "jsonl", "excel", "feather", "parquet"],
              "default": "csv",
              "title": "File Format",
              "description": "The Format of the file which should be replicated (Warning: some formats may be experimental, please refer to the docs)."
            },
            "reader_options": {
              "type": "string",
              "title": "Reader Options",
              "description": "This should be a string in JSON format. It depends on the chosen file format to provide additional options and tune its behavior.",
              "examples": ["{}", "{'sep': ' '}"]
            },
            "url": {
              "type": "string",
              "title": "URL",
              "description": "The URL path to access the file which should be replicated."
            }
          },
          "required": ["dataset_name", "format", "url"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "provider": {
              "type": "object",
              "title": "Storage Provider",
              "description": "The storage Provider or Location of the file(s) which should be replicated.",
              "default": "Public Web",
              "oneOf": [
                {
                  "title": "HTTPS: Public Web",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "const": "HTTPS"
                    }
                  }
                },
                {
                  "title": "GCS: Google Cloud Storage",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "GCS"
                    },
                    "service_account_json": {
                      "type": "string",
                      "title": "Service Account JSON",
                      "description": "In order to access private Buckets stored on Google Cloud, this connector would need a service account json credentials with the proper permissions as described <a href=\"https://cloud.google.com/iam/docs/service-accounts\" target=\"_blank\">here</a>. Please generate the credentials.json file and copy/paste its content to this field (expecting JSON formats). If accessing publicly available data, this field is not necessary."
                    }
                  }
                },
                {
                  "title": "S3: Amazon Web Services",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "S3"
                    },
                    "aws_access_key_id": {
                      "type": "string",
                      "title": "AWS Access Key ID",
                      "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary."
                    },
                    "aws_secret_access_key": {
                      "type": "string",
                      "title": "AWS Secret Access Key",
                      "description": "In order to access private Buckets stored on AWS S3, this connector would need credentials with the proper permissions. If accessing publicly available data, this field is not necessary."
                    }
                  }
                },
                {
                  "title": "AzBlob: Azure Blob Storage",
                  "required": ["storage", "storage_account"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "AzBlob"
                    },
                    "storage_account": {
                      "type": "string",
                      "title": "Storage Account",
                      "description": "The globally unique name of the storage account that the desired blob sits within. See <a href=\"https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview\" target=\"_blank\">here</a> for more details."
                    },
                    "sas_token": {
                      "type": "string",
                      "title": "SAS Token",
                      "description": "To access Azure Blob Storage, this connector would need credentials with the proper permissions. One option is a SAS (Shared Access Signature) token. If accessing publicly available data, this field is not necessary."
                    },
                    "shared_key": {
                      "type": "string",
                      "title": "Shared Key",
                      "description": "To access Azure Blob Storage, this connector would need credentials with the proper permissions. One option is a storage account shared key (aka account key or access key). If accessing publicly available data, this field is not necessary."
                    }
                  }
                },
                {
                  "title": "SSH: Secure Shell",
                  "required": ["storage", "user", "host"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "SSH"
                    },
                    "user": {
                      "type": "string",
                      "title": "User",
                      "description": ""
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": ""
                    },
                    "host": {
                      "type": "string",
                      "title": "Host",
                      "description": ""
                    },
                    "port": {
                      "type": "string",
                      "title": "Port",
                      "default": "22",
                      "description": ""
                    }
                  }
                },
                {
                  "title": "SCP: Secure copy protocol",
                  "required": ["storage", "user", "host"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "SCP"
                    },
                    "user": {
                      "type": "string",
                      "title": "User",
                      "description": ""
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": ""
                    },
                    "host": {
                      "type": "string",
                      "title": "Host",
                      "description": ""
                    },
                    "port": {
                      "type": "string",
                      "title": "Port",
                      "default": "22",
                      "description": ""
                    }
                  }
                },
                {
                  "title": "SFTP: Secure File Transfer Protocol",
                  "required": ["storage", "user", "host"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "const": "SFTP"
                    },
                    "user": {
                      "type": "string",
                      "title": "User",
                      "description": ""
                    },
                    "password": {
                      "type": "string",
                      "title": "Password",
                      "description": ""
                    },
                    "host": {
                      "type": "string",
                      "title": "Host",
                      "description": ""
                    },
                    "port": {
                      "type": "string",
                      "title": "Port",
                      "default": "22",
                      "description": ""
                    }
                  }
                },
                {
                  "title": "Local Filesystem (limited)",
                  "required": ["storage"],
                  "properties": {
                    "storage": {
                      "type": "string",
                      "title": "Storage",
                      "description": "WARNING: Note that the local storage URL available for reading must start with the local mount \"/local/\" at the moment until we implement more advanced docker mounting options.",
                      "const": "local"
                    }
                  }
                }
              ]
            }
          },
          "required": ["provider"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-freshdesk",
        "name": "Freshdesk",
        "description": "Airbyte connector for Freshdesk. For more information, see https://docs.airbyte.io/integrations/sources/freshdesk",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "freshdesk",
        "canonicalDataSourceName": "freshdesk",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain": {
              "type": "string",
              "description": "Freshdesk domain",
              "title": "Domain",
              "examples": ["myaccount.freshdesk.com"],
              "pattern": "^[a-zA-Z0-9._-]*\\.freshdesk\\.com$"
            },
            "requests_per_minute": {
              "title": "Requests per minute",
              "type": "integer",
              "description": "The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account."
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated.",
              "format": "date-time",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2020-12-01T00:00:00Z"]
            }
          },
          "required": ["domain"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Freshdesk API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/freshdesk\">docs</a> for more information on how to obtain this key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-freshsales",
        "name": "Freshsales",
        "description": "Airbyte connector for Freshsales. For more information, see https://docs.airbyte.io/integrations/sources/freshsales",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "freshsales",
        "canonicalDataSourceName": "freshsales",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain_name": {
              "type": "string",
              "title": "Domain Name",
              "description": "The Name of your Freshsales domain",
              "examples": ["mydomain.myfreshworks.com"]
            }
          },
          "required": ["domain_name"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Freshsales API Key. See <a href=\"https://crmsupport.freshworks.com/support/solutions/articles/50000002503-how-to-find-my-api-key-\">here</a>. The key is case sensitive."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-freshservice",
        "name": "Freshservice",
        "description": "Airbyte connector for Freshservice. For more information, see https://docs.airbyte.io/integrations/sources/freshservice",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "freshservice",
        "canonicalDataSourceName": "freshservice",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain_name": {
              "type": "string",
              "title": "Domain Name",
              "description": "The name of your Freshservice domain",
              "examples": ["mydomain.freshservice.com"]
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-10-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["domain_name", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "Freshservice API Key. See <a href=\"https://api.freshservice.com/#authentication\">here</a>. The key is case sensitive."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-github",
        "name": "GitHub",
        "description": "Airbyte connector for GitHub. For more information, see https://docs.airbyte.io/integrations/sources/github",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "github",
        "canonicalDataSourceName": "github",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "description": "The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the <a href=\"https://docs.airbyte.com/integrations/sources/github\">docs</a> for more info",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "order": 1
            },
            "repository": {
              "type": "string",
              "examples": [
                "airbytehq/airbyte airbytehq/another-repo",
                "airbytehq/*",
                "airbytehq/airbyte"
              ],
              "title": "GitHub Repositories",
              "description": "Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.",
              "order": 2
            },
            "branch": {
              "type": "string",
              "title": "Branch (Optional)",
              "examples": [
                "airbytehq/airbyte/master airbytehq/airbyte/my-branch"
              ],
              "description": "Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.",
              "order": 3
            },
            "page_size_for_large_streams": {
              "type": "integer",
              "title": "Page size for large streams (Optional)",
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "description": "The Github connector contains several streams with a large amount of data. The page size of such streams depends on the size of your repository. We recommended that you specify values between 10 and 30.",
              "order": 4
            }
          },
          "required": ["start_date", "repository"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication *",
              "description": "Choose how to authenticate to GitHub",
              "type": "object",
              "order": 0,
              "oneOf": [
                {
                  "type": "object",
                  "title": "Personal Access Token",
                  "required": ["personal_access_token"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "PAT Credentials",
                      "order": 0
                    },
                    "personal_access_token": {
                      "type": "string",
                      "title": "Personal Access Tokens",
                      "description": "Log into GitHub and then generate a <a href=\"https://github.com/settings/tokens\">personal access token</a>. To load balance your API quota consumption across multiple API tokens, input multiple tokens separated with \",\""
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-gitlab",
        "name": "Gitlab",
        "description": "Airbyte connector for Gitlab. For more information, see https://docs.airbyte.io/integrations/sources/gitlab",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "gitlab",
        "canonicalDataSourceName": "gitlab",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "api_url": {
              "type": "string",
              "examples": ["gitlab.com"],
              "title": "API URL",
              "description": "Please enter your basic URL from GitLab instance."
            },
            "groups": {
              "type": "string",
              "examples": ["airbyte.io"],
              "title": "Groups",
              "description": "Space-delimited list of groups. e.g. airbyte.io."
            },
            "projects": {
              "type": "string",
              "title": "Projects",
              "examples": ["airbyte.io/documentation"],
              "description": "Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for GitLab API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["api_url", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "private_token": {
              "type": "string",
              "title": "Private Token",
              "description": "Log into your GitLab account and then generate a personal Access Token."
            }
          },
          "required": ["private_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-google-ads",
        "name": "Google Ads",
        "description": "Airbyte connector for Google Ads. For more information, see https://docs.airbyte.io/integrations/sources/google-ads",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "google-ads",
        "canonicalDataSourceName": "google-ads",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "customer_id": {
              "title": "Customer ID(s)",
              "type": "string",
              "description": "Comma separated list of (client) customer IDs. Each customer ID must be specified as a 10-digit number without dashes. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>. Metrics streams like AdGroupAdReport cannot be requested for a manager account.",
              "pattern": "^[0-9]{10}(,[0-9]{10})*$",
              "examples": ["6783948572,5839201945"],
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2017-01-25"],
              "order": 2
            },
            "end_date": {
              "type": "string",
              "title": "End Date (Optional)",
              "description": "UTC date and time in the format 2017-01-25. Any data after this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2017-01-30"],
              "order": 6
            },
            "custom_queries": {
              "type": "array",
              "title": "Custom GAQL Queries (Optional)",
              "description": "",
              "order": 3,
              "items": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "title": "Custom Query",
                    "description": "A custom defined GAQL query for building the report. Should not contain segments.date expression because it is used by incremental streams. See Google's <a href=\"https://developers.google.com/google-ads/api/fields/v8/overview_query_builder\">query builder</a> for more information.",
                    "examples": [
                      "SELECT segments.ad_destination_type, campaign.advertising_channel_sub_type FROM campaign WHERE campaign.status = 'PAUSED'"
                    ]
                  },
                  "table_name": {
                    "type": "string",
                    "title": "Destination Table Name",
                    "description": "The table name in your destination database for choosen query."
                  }
                }
              }
            },
            "login_customer_id": {
              "type": "string",
              "title": "Login Customer ID for Managed Accounts (Optional)",
              "description": "If your access to the customer account is through a manager account, this field is required and must be set to the customer ID of the manager account (10-digit number without dashes). More information about this field you can see <a href=\"https://developers.google.com/google-ads/api/docs/concepts/call-structure#cid\">here</a>",
              "pattern": "^([0-9]{10})?$",
              "examples": ["7349206847"],
              "order": 4
            },
            "conversion_window_days": {
              "title": "Conversion Window (Optional)",
              "type": "integer",
              "description": "A conversion window is the period of time after an ad interaction (such as an ad click or video view) during which a conversion, such as a purchase, is recorded in Google Ads. For more information, see Google's <a href=\"https://support.google.com/google-ads/answer/3123169?hl=en\">documentation</a>.",
              "minimum": 0,
              "maximum": 1095,
              "default": 14,
              "examples": [14],
              "order": 5
            }
          },
          "required": ["customer_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "type": "object",
              "description": "",
              "title": "Google Credentials",
              "order": 0,
              "required": [
                "developer_token",
                "client_id",
                "client_secret",
                "refresh_token"
              ],
              "properties": {
                "developer_token": {
                  "type": "string",
                  "title": "Developer Token",
                  "description": "Developer token granted by Google to use their APIs. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>"
                },
                "client_id": {
                  "type": "string",
                  "title": "Client ID",
                  "description": "The Client ID of your Google Ads developer application. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>"
                },
                "client_secret": {
                  "type": "string",
                  "title": "Client Secret",
                  "description": "The Client Secret of your Google Ads developer application. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>"
                },
                "access_token": {
                  "type": "string",
                  "title": "Access Token",
                  "description": "Access Token for making authenticated requests. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>"
                },
                "refresh_token": {
                  "type": "string",
                  "title": "Refresh Token",
                  "description": "The token for obtaining a new access token. More instruction on how to find this value in our <a href=\"https://docs.airbyte.com/integrations/sources/google-ads#setup-guide\">docs</a>"
                }
              }
            }
          },
          "required": ["credentials"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-google-analytics-v4",
        "name": "Google Analytics",
        "description": "Airbyte connector for Google Analytics. For more information, see https://docs.airbyte.io/integrations/sources/google-analytics-v4",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "google-analytics-v4",
        "canonicalDataSourceName": "google-analytics-v4",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "order": 1,
              "type": "string",
              "title": "Replication Start Date",
              "description": "The date in the format YYYY-MM-DD. Any data before this date will not be replicated.",
              "examples": ["2020-06-01"]
            },
            "view_id": {
              "order": 2,
              "type": "string",
              "title": "View ID",
              "description": "The ID for the Google Analytics View you want to fetch data from. This can be found from the <a href=\"https://ga-dev-tools.appspot.com/account-explorer/\">Google Analytics Account Explorer</a>."
            },
            "custom_reports": {
              "order": 3,
              "type": "string",
              "title": "Custom Reports (Optional)",
              "description": "A JSON array describing the custom reports you want to sync from Google Analytics. See <a href=\"https://docs.airbyte.io/integrations/sources/google-analytics-v4#data-processing-latency\">the docs</a> for more information about the exact format you can use to fill out this field."
            },
            "window_in_days": {
              "type": "integer",
              "title": "Data request time increment in days (Optional)",
              "description": "The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the <a href=\"https://docs.airbyte.com/integrations/sources/google-analytics-v4/#sampling-in-reports\">the docs</a>. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364. ",
              "examples": [30, 60, 90, 120, 200, 364],
              "default": 1,
              "order": 4
            }
          },
          "required": ["start_date", "view_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "order": 0,
              "type": "object",
              "title": "Credentials",
              "description": "Credentials for the service",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Service Account Key Authentication",
                  "required": ["credentials_json"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service",
                      "order": 0
                    },
                    "credentials_json": {
                      "title": "Service Account JSON Key",
                      "type": "string",
                      "description": "The JSON key of the service account to use for authorization",
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-google-directory",
        "name": "Google Directory",
        "description": "Airbyte connector for Google Directory. For more information, see https://docs.airbyte.io/integrations/sources/google-directory",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "google-directory",
        "canonicalDataSourceName": "google-directory",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Google Credentials",
              "description": "Google APIs use the OAuth 2.0 protocol for authentication and authorization. The Source supports <a href=\"https://developers.google.com/identity/protocols/oauth2#webserver\" target=\"_blank\">Web server application</a> and <a href=\"https://developers.google.com/identity/protocols/oauth2#serviceaccount\" target=\"_blank\">Service accounts</a> scenarios.",
              "type": "object",
              "oneOf": [
                {
                  "title": "Service Account Key",
                  "description": "For these scenario user should obtain service account's credentials from the Google API Console and provide delegated email.",
                  "type": "object",
                  "required": ["credentials_json", "email"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials Title",
                      "description": "Authentication Scenario",
                      "const": "Service accounts",
                      "enum": ["Service accounts"],
                      "default": "Service accounts",
                      "order": 0
                    },
                    "credentials_json": {
                      "type": "string",
                      "title": "Credentials JSON",
                      "description": "The contents of the JSON service account key. See the <a href=\"https://developers.google.com/admin-sdk/directory/v1/guides/delegation\">docs</a> for more information on how to generate this key."
                    },
                    "email": {
                      "type": "string",
                      "title": "Email",
                      "description": "The email of the user, which has permissions to access the Google Workspace Admin APIs."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-google-search-console",
        "name": "Google Search Console",
        "description": "Airbyte connector for Google Search Console. For more information, see https://docs.airbyte.io/integrations/sources/google-search-console",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "google-search-console",
        "canonicalDataSourceName": "google-search-console",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "site_urls": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Website URL Property",
              "description": "The URLs of the website property attached to your GSC account. Read more <a href=\"https://support.google.com/webmasters/answer/34592?hl=en\">here</a>.",
              "examples": ["https://example1.com", "https://example2.com"],
              "order": 0
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date in the format 2017-01-25. Any data before this date will not be replicated.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 1
            },
            "end_date": {
              "type": "string",
              "title": "End Date",
              "description": "UTC date in the format 2017-01-25. Any data after this date will not be replicated. Must be greater or equal to the start date field.",
              "examples": ["2021-12-12"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 2
            }
          },
          "required": ["site_urls", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "authorization": {
              "type": "object",
              "title": "Authentication Type",
              "description": "",
              "order": 3,
              "oneOf": [
                {
                  "type": "object",
                  "title": "Service Account Key Authentication",
                  "required": ["auth_type", "service_account_info", "email"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service",
                      "order": 0
                    },
                    "service_account_info": {
                      "title": "Service Account JSON Key",
                      "type": "string",
                      "description": "The JSON key of the service account to use for authorization. Read more <a href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys\">here</a>.",
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ]
                    },
                    "email": {
                      "title": "Admin Email",
                      "type": "string",
                      "description": "The email of the user which has permissions to access the Google Workspace Admin APIs."
                    }
                  }
                }
              ]
            }
          },
          "required": ["authorization"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-google-sheets",
        "name": "Google Sheets",
        "description": "Airbyte connector for Google Sheets. For more information, see https://docs.airbyte.io/integrations/sources/google-sheets",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "google-sheets",
        "canonicalDataSourceName": "google-sheets",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "spreadsheet_id": {
              "type": "string",
              "title": "Spreadsheet Link",
              "description": "The link to your spreadsheet. See <a href='https://docs.airbyte.com/integrations/sources/google-sheets#sheetlink'>this guide</a> for more details.",
              "examples": [
                "https://docs.google.com/spreadsheets/d/1hLd9Qqti3UyLXZB2aFfUWDT7BG-arw2xy4HR3D-dwUb/edit"
              ]
            }
          },
          "required": ["spreadsheet_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "type": "object",
              "title": "Authentication",
              "description": "Google API Credentials for connecting to Google Sheets and Google Drive APIs",
              "oneOf": [
                {
                  "title": "Service Account Key Authentication",
                  "type": "object",
                  "required": ["auth_type", "service_account_info"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Service"
                    },
                    "service_account_info": {
                      "type": "string",
                      "title": "Service Account Information.",
                      "description": "The JSON key of the service account to use for authorization. See <a href='https://github.com/airbytehq/airbyte/blob/master/docs/integrations/sources/google-sheets.md#setupguide'>Setup Guide</a> for more details",
                      "examples": [
                        "{ \"type\": \"service_account\", \"project_id\": YOUR_PROJECT_ID, \"private_key_id\": YOUR_PRIVATE_KEY, ... }"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "required": ["credentials"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-google-workspace-admin-reports",
        "name": "Google Workspace Admin Reports",
        "description": "Airbyte connector for Google Workspace Admin Reports. For more information, see https://docs.airbyte.io/integrations/sources/google-workspace-admin-reports",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "google-workspace-admin-reports",
        "canonicalDataSourceName": "google-workspace-admin-reports",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "email": {
              "type": "string",
              "title": "Email",
              "description": "The email of the user, who has permissions to access the Google Workspace Admin APIs."
            },
            "lookback": {
              "type": "integer",
              "title": "Lookback Window in Days",
              "minimum": 0,
              "maximum": 180,
              "description": "Sets the range of time shown in the report. The maximum value allowed by the Google API is 180 days."
            }
          },
          "required": ["email"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials_json": {
              "type": "string",
              "title": "Credentials JSON",
              "description": "The contents of the JSON service account key. See the <a href=\"https://developers.google.com/admin-sdk/reports/v1/guides/delegation\">docs</a> for more information on how to generate this key."
            }
          },
          "required": ["credentials_json"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-greenhouse",
        "name": "Greenhouse",
        "description": "Airbyte connector for Greenhouse. For more information, see https://docs.airbyte.io/integrations/sources/greenhouse",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "greenhouse",
        "canonicalDataSourceName": "greenhouse",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "Greenhouse API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/greenhouse\">docs</a> for more information on how to generate this key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-harvest",
        "name": "Harvest",
        "description": "Airbyte connector for Harvest. For more information, see https://docs.airbyte.io/integrations/sources/harvest",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "harvest",
        "canonicalDataSourceName": "harvest",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "replication_start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "order": 1
            }
          },
          "required": ["replication_start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "account_id": {
              "title": "Account ID",
              "description": "Harvest account ID. Required for all Harvest requests in pair with Personal Access Token",
              "type": "string",
              "order": 0
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate to Harvest.",
              "type": "object",
              "order": 2,
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate with Personal Access Token",
                  "required": ["api_token"],
                  "additionalProperties": false,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "enum": ["Token"],
                      "default": "Token",
                      "order": 0
                    },
                    "api_token": {
                      "title": "Personal Access Token",
                      "description": "Log into Harvest and then create new <a href=\"https://id.getharvest.com/developers\"> personal access token</a>.",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "required": ["account_id"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-hellobaton",
        "name": "Hellobaton",
        "description": "Airbyte connector for Hellobaton. For more information, see https://docs.airbyte.io/integrations/sources/hellobaton",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "hellobaton",
        "canonicalDataSourceName": "hellobaton",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "company": {
              "type": "string",
              "description": "Company name that generates your base api url",
              "examples": ["google", "facebook", "microsoft"]
            }
          },
          "required": ["company"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "authentication key required to access the api endpoints"
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-hubspot",
        "name": "HubSpot",
        "description": "Airbyte connector for HubSpot. For more information, see https://docs.airbyte.io/integrations/sources/hubspot",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "hubspot",
        "canonicalDataSourceName": "hubspot",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"]
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication",
              "description": "Choose how to authenticate to HubSpot.",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API key",
                  "required": ["api_key", "credentials_title"],
                  "properties": {
                    "credentials_title": {
                      "type": "string",
                      "title": "Credentials",
                      "description": "Name of the credentials set",
                      "const": "API Key Credentials",
                      "order": 0
                    },
                    "api_key": {
                      "title": "API key",
                      "description": "HubSpot API Key. See the <a href=\"https://knowledge.hubspot.com/integrations/how-do-i-get-my-hubspot-api-key\">Hubspot docs</a> if you need help finding this key.",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "required": ["credentials"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-instagram",
        "name": "Instagram",
        "description": "Airbyte connector for Instagram. For more information, see https://docs.airbyte.io/integrations/sources/instagram",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "instagram",
        "canonicalDataSourceName": "instagram",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for User Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "title": "Access Token",
              "description": "The value of the access token generated. See the <a href=\"https://docs.airbyte.io/integrations/sources/instagram\">docs</a> for more information",
              "type": "string"
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-intercom",
        "name": "Intercom",
        "description": "Airbyte connector for Intercom. For more information, see https://docs.airbyte.io/integrations/sources/intercom",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "intercom",
        "canonicalDataSourceName": "intercom",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "title": "Access token",
              "type": "string",
              "description": "Access token for making authenticated requests. See the <a href=\"https://developers.intercom.com/building-apps/docs/authentication-types#how-to-get-your-access-token\">Intercom docs</a> for more information."
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-iterable",
        "name": "Iterable",
        "description": "Airbyte connector for Iterable. For more information, see https://docs.airbyte.io/integrations/sources/iterable",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "iterable",
        "canonicalDataSourceName": "iterable",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Iterable, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2021-04-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Iterable API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/iterable\">docs</a> for more information on how to obtain this key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-jira",
        "name": "Jira",
        "description": "Airbyte connector for Jira. For more information, see https://docs.airbyte.io/integrations/sources/jira",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "jira",
        "canonicalDataSourceName": "jira",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain": {
              "type": "string",
              "title": "Domain",
              "examples": ["domainname.atlassian.net"],
              "pattern": "^[a-zA-Z0-9._-]*\\.atlassian\\.net$",
              "description": "The Domain for your Jira account, e.g. airbyteio.atlassian.net"
            },
            "email": {
              "type": "string",
              "title": "Email",
              "description": "The user email for your Jira account."
            },
            "projects": {
              "type": "array",
              "title": "Projects",
              "items": {
                "type": "string"
              },
              "examples": ["PROJ1", "PROJ2"],
              "description": "List of Jira project keys to replicate data for."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Jira in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. Note that it will be used only in the following incremental streams: issues.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "additional_fields": {
              "type": "array",
              "title": "Additional Fields",
              "items": {
                "type": "string"
              },
              "description": "List of additional fields to include in replicating issues.",
              "examples": ["customfield_10096", "customfield_10071"]
            },
            "expand_issue_changelog": {
              "type": "boolean",
              "title": "Expand Issue Changelog",
              "description": "Expand the changelog when replicating issues.",
              "default": false
            },
            "render_fields": {
              "type": "boolean",
              "title": "Render Issue Fields",
              "description": "Render issue fields in HTML format in addition to Jira JSON-like format.",
              "default": false
            },
            "enable_experimental_streams": {
              "type": "boolean",
              "title": "Enable Experimental Streams",
              "description": "Allow the use of experimental streams which rely on undocumented Jira API endpoints. See https://docs.airbyte.io/integrations/sources/jira#experimental-tables for more info.",
              "default": false
            }
          },
          "required": ["domain", "email"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "type": "string",
              "title": "API Token",
              "description": "Jira API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/jira\">docs</a> for more information on how to generate this key."
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-kafka",
        "name": "Kafka",
        "description": "Airbyte connector for Kafka. For more information, see https://docs.airbyte.io/integrations/sources/kafka",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "kafka",
        "canonicalDataSourceName": "kafka",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "bootstrap_servers": {
              "title": "Bootstrap Servers",
              "description": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping&mdash;this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).",
              "type": "string",
              "examples": ["kafka-broker1:9092,kafka-broker2:9092"]
            },
            "subscription": {
              "title": "Subscription Method",
              "type": "object",
              "description": "You can choose to manually assign a list of partitions, or subscribe to all topics matching specified pattern to get dynamically assigned partitions.",
              "oneOf": [
                {
                  "title": "Manually assign a list of partitions",
                  "required": ["subscription_type", "topic_partitions"],
                  "properties": {
                    "subscription_type": {
                      "description": "Manually assign a list of partitions to this consumer. This interface does not allow for incremental assignment and will replace the previous assignment (if there is one).\nIf the given list of topic partitions is empty, it is treated the same as unsubscribe().",
                      "type": "string",
                      "const": "assign",
                      "enum": ["assign"],
                      "default": "assign"
                    },
                    "topic_partitions": {
                      "title": "List of topic:partition Pairs",
                      "type": "string",
                      "examples": ["sample.topic:0, sample.topic:1"]
                    }
                  }
                },
                {
                  "title": "Subscribe to all topics matching specified pattern",
                  "required": ["subscription_type", "topic_pattern"],
                  "properties": {
                    "subscription_type": {
                      "description": "The Topic pattern from which the records will be read.",
                      "type": "string",
                      "const": "subscribe",
                      "enum": ["subscribe"],
                      "default": "subscribe"
                    },
                    "topic_pattern": {
                      "title": "Topic Pattern",
                      "type": "string",
                      "examples": ["sample.topic"]
                    }
                  }
                }
              ]
            },
            "test_topic": {
              "title": "Test Topic",
              "description": "The Topic to test in case the Airbyte can consume messages.",
              "type": "string",
              "examples": ["test.topic"]
            },
            "group_id": {
              "title": "Group ID",
              "description": "The Group ID is how you distinguish different consumer groups.",
              "type": "string",
              "examples": ["group.id"]
            },
            "max_poll_records": {
              "title": "Max Poll Records",
              "description": "The maximum number of records returned in a single call to poll(). Note, that max_poll_records does not impact the underlying fetching behavior. The consumer will cache the records from each fetch request and returns them incrementally from each poll.",
              "type": "integer",
              "default": 500
            },
            "client_id": {
              "title": "Client ID",
              "description": "An ID string to pass to the server when making requests. The purpose of this is to be able to track the source of requests beyond just ip/port by allowing a logical application name to be included in server-side request logging.",
              "type": "string",
              "examples": ["airbyte-consumer"]
            },
            "enable_auto_commit": {
              "title": "Enable Auto Commit",
              "description": "If true, the consumer's offset will be periodically committed in the background.",
              "type": "boolean",
              "default": true
            },
            "auto_commit_interval_ms": {
              "title": "Auto Commit Interval, ms",
              "description": "The frequency in milliseconds that the consumer offsets are auto-committed to Kafka if enable.auto.commit is set to true.",
              "type": "integer",
              "default": 5000
            },
            "client_dns_lookup": {
              "title": "Client DNS Lookup",
              "description": "Controls how the client uses DNS lookups. If set to use_all_dns_ips, connect to each returned IP address in sequence until a successful connection is established. After a disconnection, the next IP is used. Once all IPs have been used once, the client resolves the IP(s) from the hostname again. If set to resolve_canonical_bootstrap_servers_only, resolve each bootstrap address into a list of canonical names. After the bootstrap phase, this behaves the same as use_all_dns_ips. If set to default (deprecated), attempt to connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.",
              "type": "string",
              "default": "use_all_dns_ips",
              "enum": [
                "default",
                "use_all_dns_ips",
                "resolve_canonical_bootstrap_servers_only"
              ]
            },
            "retry_backoff_ms": {
              "title": "Retry Backoff, ms",
              "description": "The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.",
              "type": "integer",
              "default": 100
            },
            "request_timeout_ms": {
              "title": "Request Timeout, ms",
              "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.",
              "type": "integer",
              "default": 30000
            },
            "receive_buffer_bytes": {
              "title": "Receive Buffer, bytes",
              "description": "The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.",
              "type": "integer",
              "default": 32768
            },
            "auto_offset_reset": {
              "title": "Auto Offset Reset",
              "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server - earliest: automatically reset the offset to the earliest offset, latest: automatically reset the offset to the latest offset, none: throw exception to the consumer if no previous offset is found for the consumer's group, anything else: throw exception to the consumer.",
              "type": "string",
              "default": "latest",
              "enum": ["latest", "earliest", "none"]
            },
            "repeated_calls": {
              "title": "Repeated Calls",
              "description": "The number of repeated calls to poll() if no messages were received.",
              "type": "integer",
              "default": 3
            }
          },
          "required": ["bootstrap_servers", "subscription"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "protocol": {
              "title": "Protocol",
              "type": "object",
              "description": "The Protocol used to communicate with brokers.",
              "oneOf": [
                {
                  "title": "PLAINTEXT",
                  "required": ["security_protocol"],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "enum": ["PLAINTEXT"],
                      "default": "PLAINTEXT"
                    }
                  }
                },
                {
                  "title": "SASL PLAINTEXT",
                  "required": [
                    "security_protocol",
                    "sasl_mechanism",
                    "sasl_jaas_config"
                  ],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "enum": ["SASL_PLAINTEXT"],
                      "default": "SASL_PLAINTEXT"
                    },
                    "sasl_mechanism": {
                      "title": "SASL Mechanism",
                      "description": "The SASL mechanism used for client connections. This may be any mechanism for which a security provider is available.",
                      "type": "string",
                      "default": "PLAIN",
                      "enum": ["PLAIN"]
                    },
                    "sasl_jaas_config": {
                      "title": "SASL JAAS Config",
                      "description": "The JAAS login context parameters for SASL connections in the format used by JAAS configuration files.",
                      "type": "string",
                      "default": ""
                    }
                  }
                },
                {
                  "title": "SASL SSL",
                  "required": [
                    "security_protocol",
                    "sasl_mechanism",
                    "sasl_jaas_config"
                  ],
                  "properties": {
                    "security_protocol": {
                      "type": "string",
                      "enum": ["SASL_SSL"],
                      "default": "SASL_SSL"
                    },
                    "sasl_mechanism": {
                      "title": "SASL Mechanism",
                      "description": "The SASL mechanism used for client connections. This may be any mechanism for which a security provider is available.",
                      "type": "string",
                      "default": "GSSAPI",
                      "enum": [
                        "GSSAPI",
                        "OAUTHBEARER",
                        "SCRAM-SHA-256",
                        "SCRAM-SHA-512",
                        "PLAIN"
                      ]
                    },
                    "sasl_jaas_config": {
                      "title": "SASL JAAS Config",
                      "description": "The JAAS login context parameters for SASL connections in the format used by JAAS configuration files.",
                      "type": "string",
                      "default": ""
                    }
                  }
                }
              ]
            }
          },
          "required": ["protocol"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-klaviyo",
        "name": "Klaviyo",
        "description": "Airbyte connector for Klaviyo. For more information, see https://docs.airbyte.io/integrations/sources/klaviyo",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "klaviyo",
        "canonicalDataSourceName": "klaviyo",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "title": "Api Key",
              "description": "Klaviyo API Key. See our <a href=\"https://docs.airbyte.io/integrations/sources/klaviyo\">docs</a> if you need help finding this key.",
              "type": "string"
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-kustomer-singer",
        "name": "Kustomer",
        "description": "Airbyte connector for Kustomer. For more information, see https://docs.airbyte.io/integrations/sources/kustomer",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "kustomer-singer",
        "canonicalDataSourceName": "kustomer-singer",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate the data",
              "examples": ["2019-01-01T00:00:00Z"]
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "title": "API Token",
              "type": "string",
              "description": "Kustomer API Token. See the <a href=\"https://developer.kustomer.com/kustomer-api-docs/reference/authentication\">docs</a> on how to obtain this"
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-lemlist",
        "name": "Lemlist",
        "description": "Airbyte connector for Lemlist. For more information, see https://docs.airbyte.io/integrations/sources/lemlist",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "lemlist",
        "canonicalDataSourceName": "lemlist",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API key",
              "description": "Lemlist API key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-lever-hiring",
        "name": "Lever Hiring",
        "description": "Airbyte connector for Lever Hiring. For more information, see https://docs.airbyte.io/integrations/sources/lever-hiring",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "lever-hiring",
        "canonicalDataSourceName": "lever-hiring",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "order": 0,
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues.",
              "examples": ["2021-03-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "environment": {
              "order": 1,
              "type": "string",
              "title": "Environment",
              "description": "The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use.",
              "default": "Sandbox",
              "enum": ["Production", "Sandbox"]
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "order": 3,
              "title": "Authentication Mechanism",
              "description": "Choose how to authenticate to Lever Hiring.",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate via Lever (OAuth)",
                  "required": ["refresh_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Client",
                      "enum": ["Client"],
                      "default": "Client",
                      "order": 0
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Lever Hiring developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Lever Hiring developer application."
                    },
                    "option_title": {
                      "type": "string",
                      "title": "Credentials Title",
                      "description": "OAuth Credentials",
                      "const": "OAuth Credentials"
                    },
                    "refresh_token": {
                      "type": "string",
                      "title": "Refresh Token",
                      "description": "The token for obtaining new access token."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-linkedin-ads",
        "name": "LinkedIn Ads",
        "description": "Airbyte connector for LinkedIn Ads. For more information, see https://docs.airbyte.io/integrations/sources/linkedin-ads",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "linkedin-ads",
        "canonicalDataSourceName": "linkedin-ads",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "description": "UTC date in the format 2020-09-17. Any data before this date will not be replicated.",
              "examples": ["2021-05-17"]
            },
            "account_ids": {
              "title": "Account IDs (Optional)",
              "type": "array",
              "description": "Specify the account IDs separated by a space, to pull the data from. Leave empty, if you want to pull the data from all associated accounts. See the <a href=\"https://www.linkedin.com/help/linkedin/answer/a424270/find-linkedin-ads-account-details?lang=en\">LinkedIn Ads docs</a> for more info.",
              "items": {
                "type": "integer"
              },
              "default": []
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication *",
              "type": "object",
              "oneOf": [
                {
                  "title": "Access token",
                  "type": "object",
                  "required": ["access_token"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "access_token"
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access token",
                      "description": "The token value generated using the authentication code. See the <a href=\"https://docs.airbyte.com/integrations/sources/linkedin-ads#authentication\">docs</a> to obtain yours."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-linnworks",
        "name": "Linnworks",
        "description": "Airbyte connector for Linnworks. For more information, see https://docs.airbyte.io/integrations/sources/linnworks",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "linnworks",
        "canonicalDataSourceName": "linnworks",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "application_id": {
              "title": "Application ID.",
              "description": "Linnworks Application ID",
              "type": "string"
            },
            "start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["application_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "application_secret": {
              "title": "Application Secret",
              "description": "Linnworks Application Secret",
              "type": "string"
            },
            "token": {
              "title": "API Token",
              "type": "string"
            }
          },
          "required": ["application_secret", "token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-looker",
        "name": "Looker",
        "description": "Airbyte connector for Looker. For more information, see https://docs.airbyte.io/integrations/sources/looker",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "looker",
        "canonicalDataSourceName": "looker",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain": {
              "type": "string",
              "title": "Domain",
              "examples": [
                "domainname.looker.com",
                "looker.clientname.com",
                "123.123.124.123:8000"
              ],
              "description": "Domain for your Looker account, e.g. airbyte.cloud.looker.com,looker.[clientname].com,IP address"
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID is first part of an API3 key that is specific to each Looker user. See the <a href=\"https://docs.airbyte.io/integrations/sources/looker\">docs</a> for more information on how to generate this key."
            },
            "run_look_ids": {
              "title": "Look IDs to Run",
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9]*$"
              },
              "description": "The IDs of any Looks to run (optional)"
            }
          },
          "required": ["domain", "client_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret is second part of an API3 key."
            }
          },
          "required": ["client_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-mailchimp",
        "name": "Mailchimp",
        "description": "Airbyte connector for Mailchimp. For more information, see https://docs.airbyte.io/integrations/sources/mailchimp",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mailchimp",
        "canonicalDataSourceName": "mailchimp",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "type": "object",
              "title": "Authentication *",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API Key",
                  "required": ["auth_type", "apikey"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "apikey",
                      "order": 1
                    },
                    "apikey": {
                      "type": "string",
                      "title": "API Key",
                      "description": "Mailchimp API Key. See the <a href=\"https://docs.airbyte.io/integrations/sources/mailchimp\">docs</a> for information on how to generate this key."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-mailgun",
        "name": "Mailgun",
        "description": "Airbyte connector for Mailgun. For more information, see https://docs.airbyte.io/integrations/sources/mailgun",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mailgun",
        "canonicalDataSourceName": "mailgun",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain_region": {
              "type": "string",
              "description": "Domain region code. 'EU' or 'US' are possible values. The default is 'US'.",
              "title": "Domain Region Code"
            },
            "start_date": {
              "title": "Replication Start Date",
              "description": "UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "examples": ["2020-10-01 00:00:00"],
              "type": "string"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "private_key": {
              "type": "string",
              "description": "Primary account API key to access your Mailgun data.",
              "title": "Private API Key"
            }
          },
          "required": ["private_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-marketo",
        "name": "Marketo",
        "description": "Airbyte connector for Marketo. For more information, see https://docs.airbyte.io/integrations/sources/marketo",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "marketo",
        "canonicalDataSourceName": "marketo",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "order": 2,
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2020-09-25T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "domain_url": {
              "title": "Domain URL",
              "type": "string",
              "order": 3,
              "description": "Your Marketo Base URL. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"> the docs </a> for info on how to obtain this.",
              "examples": ["https://000-AAA-000.mktorest.com"]
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID of your Marketo developer application. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"> the docs </a> for info on how to obtain this.",
              "order": 0
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret of your Marketo developer application. See <a href=\"https://docs.airbyte.io/integrations/sources/marketo\"> the docs </a> for info on how to obtain this.",
              "order": 1
            }
          },
          "required": ["domain_url", "client_id", "client_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-microsoft-teams",
        "name": "Microsoft teams",
        "description": "Airbyte connector for Microsoft teams. For more information, see https://docs.airbyte.io/integrations/sources/microsoft-teams",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "microsoft-teams",
        "canonicalDataSourceName": "microsoft-teams",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "period": {
              "type": "string",
              "title": "Period",
              "description": "Specifies the length of time over which the Team Device Report stream is aggregated. The supported values are: D7, D30, D90, and D180.",
              "examples": ["D7"]
            }
          },
          "required": ["period"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate to Microsoft",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate via Microsoft",
                  "required": ["tenant_id", "client_id", "client_secret"],
                  "additionalProperties": false,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "enum": ["Token"],
                      "default": "Token",
                      "order": 0
                    },
                    "tenant_id": {
                      "title": "Directory (tenant) ID",
                      "type": "string",
                      "description": "A globally unique identifier (GUID) that is different than your organization name or domain. Follow these steps to obtain: open one of the Teams where you belong inside the Teams Application -> Click on the … next to the Team title -> Click on Get link to team -> Copy the link to the team and grab the tenant ID form the URL"
                    },
                    "client_id": {
                      "title": "Client ID",
                      "type": "string",
                      "description": "The Client ID of your Microsoft Teams developer application."
                    },
                    "client_secret": {
                      "title": "Client Secret",
                      "type": "string",
                      "description": "The Client Secret of your Microsoft Teams developer application."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-mixpanel",
        "name": "Mixpanel",
        "description": "Airbyte connector for Mixpanel. For more information, see https://docs.airbyte.io/integrations/sources/mixpanel",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mixpanel",
        "canonicalDataSourceName": "mixpanel",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "attribution_window": {
              "title": "Attribution Window",
              "type": "integer",
              "description": " A period of time for attributing results to ads and the lookback period after those actions occur during which ad results are counted. Default attribution window is 5 days.",
              "default": 5
            },
            "project_timezone": {
              "title": "Project Timezone",
              "type": "string",
              "description": "Time zone in which integer date times are stored. The project timezone may be found in the project settings in the <a href=\"https://help.mixpanel.com/hc/en-us/articles/115004547203-Manage-Timezones-for-Projects-in-Mixpanel\">Mixpanel console</a>.",
              "default": "US/Pacific",
              "examples": ["US/Pacific", "UTC"]
            },
            "select_properties_by_default": {
              "title": "Select Properties By Default",
              "type": "boolean",
              "description": "Setting this config parameter to TRUE ensures that new properties on events and engage records are captured. Otherwise new properties will be ignored.",
              "default": true
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. If this option is not set, the connector will replicate data from up to one year ago by default.",
              "examples": ["2021-11-16"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$"
            },
            "region": {
              "title": "Region",
              "description": "The region of mixpanel domain instance either US or EU.",
              "type": "string",
              "enum": ["US", "EU"],
              "default": "US"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_secret": {
              "title": "Project Token",
              "type": "string",
              "description": "Mixpanel project token. See the <a href=\"https://help.mixpanel.com/hc/en-us/articles/115004502806-Find-Project-Token-\">docs</a> for more information on how to obtain this."
            }
          },
          "required": ["api_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-monday",
        "name": "Monday",
        "description": "Airbyte connector for Monday. For more information, see https://docs.airbyte.io/integrations/sources/monday",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "monday",
        "canonicalDataSourceName": "monday",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["auth_type", "api_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "api_token",
                      "enum": ["api_token"],
                      "default": "api_token",
                      "order": 0
                    },
                    "api_token": {
                      "type": "string",
                      "title": "Personal API Token",
                      "description": "API Token for making authenticated requests."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-mongodb-v2",
        "name": "MongoDB",
        "description": "Airbyte connector for MongoDB. For more information, see https://docs.airbyte.io/integrations/sources/mongodb-v2",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mongodb-v2",
        "canonicalDataSourceName": "mongodb",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "instance_type": {
              "type": "object",
              "title": "MongoDb Instance Type",
              "description": "The MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.",
              "order": 0,
              "oneOf": [
                {
                  "title": "Standalone MongoDb Instance",
                  "required": ["instance", "host", "port"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["standalone"],
                      "default": "standalone"
                    },
                    "host": {
                      "title": "Host",
                      "type": "string",
                      "description": "The host name of the Mongo database.",
                      "order": 0
                    },
                    "port": {
                      "title": "Port",
                      "type": "integer",
                      "description": "The port of the Mongo database.",
                      "minimum": 0,
                      "maximum": 65536,
                      "default": 27017,
                      "examples": ["27017"],
                      "order": 1
                    },
                    "tls": {
                      "title": "TLS Connection",
                      "type": "boolean",
                      "description": "Indicates whether TLS encryption protocol will be used to connect to MongoDB. It is recommended to use TLS connection if possible. For more information see <a href=\"https://docs.airbyte.io/integrations/sources/mongodb-v2\">documentation</a>.",
                      "default": false,
                      "order": 2
                    }
                  }
                },
                {
                  "title": "Replica Set",
                  "required": ["instance", "server_addresses"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["replica"],
                      "default": "replica"
                    },
                    "server_addresses": {
                      "title": "Server Addresses",
                      "type": "string",
                      "description": "The members of a replica set. Please specify `host`:`port` of each member separated by comma.",
                      "examples": ["host1:27017,host2:27017,host3:27017"],
                      "order": 0
                    },
                    "replica_set": {
                      "title": "Replica Set",
                      "type": "string",
                      "description": "A replica set in MongoDB is a group of mongod processes that maintain the same data set.",
                      "order": 1
                    }
                  }
                },
                {
                  "title": "MongoDB Atlas",
                  "additionalProperties": false,
                  "required": ["instance", "cluster_url"],
                  "properties": {
                    "instance": {
                      "type": "string",
                      "enum": ["atlas"],
                      "default": "atlas"
                    },
                    "cluster_url": {
                      "title": "Cluster URL",
                      "type": "string",
                      "description": "The URL of a cluster to connect to.",
                      "order": 0
                    }
                  }
                }
              ]
            },
            "database": {
              "title": "Database Name",
              "type": "string",
              "description": "The database you want to replicate.",
              "order": 1
            },
            "user": {
              "title": "User",
              "type": "string",
              "description": "The username which is used to access the database.",
              "order": 2
            },
            "auth_source": {
              "title": "Authentication Source",
              "type": "string",
              "description": "The authentication source where the user information is stored.",
              "default": "admin",
              "examples": ["admin"],
              "order": 4
            }
          },
          "required": ["database"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "The password associated with this username.",
              "order": 3
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-mssql",
        "name": "Microsoft SQL Server (MSSQL)",
        "description": "Airbyte connector for Microsoft SQL Server (MSSQL). For more information, see https://docs.airbyte.io/integrations/destinations/mssql",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mssql",
        "canonicalDataSourceName": "mssql",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "description": "The hostname of the database.",
              "title": "Host",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "The port of the database.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "examples": ["1433"],
              "order": 1
            },
            "database": {
              "description": "The name of the database.",
              "title": "Database",
              "type": "string",
              "examples": ["master"],
              "order": 2
            },
            "username": {
              "description": "The username which is used to access the database.",
              "title": "Username",
              "type": "string",
              "order": 3
            },
            "jdbc_url_params": {
              "title": "JDBC URL Params",
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "type": "string",
              "order": 5
            },
            "ssl_method": {
              "title": "SSL Method",
              "type": "object",
              "description": "The encryption method which is used when communicating with the database.",
              "order": 6,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "additionalProperties": false,
                  "description": "Data transfer will not be encrypted.",
                  "required": ["ssl_method"],
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "unencrypted",
                      "enum": ["unencrypted"],
                      "default": "unencrypted"
                    }
                  }
                },
                {
                  "title": "Encrypted (trust server certificate)",
                  "additionalProperties": false,
                  "description": "Use the certificate provided by the server without verification. (For testing purposes only!)",
                  "required": ["ssl_method"],
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "encrypted_trust_server_certificate",
                      "enum": ["encrypted_trust_server_certificate"],
                      "default": "encrypted_trust_server_certificate"
                    }
                  }
                },
                {
                  "title": "Encrypted (verify certificate)",
                  "additionalProperties": false,
                  "description": "Verify and use the certificate provided by the server.",
                  "required": [
                    "ssl_method",
                    "trustStoreName",
                    "trustStorePassword"
                  ],
                  "properties": {
                    "ssl_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate",
                      "enum": ["encrypted_verify_certificate"],
                      "default": "encrypted_verify_certificate"
                    },
                    "hostNameInCertificate": {
                      "title": "Host Name In Certificate",
                      "type": "string",
                      "description": "Specifies the host name of the server. The value of this property must match the subject property of the certificate.",
                      "order": 7
                    }
                  }
                }
              ]
            },
            "replication_method": {
              "type": "string",
              "title": "Replication Method",
              "description": "The replication method used for extracting data from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.",
              "default": "STANDARD",
              "enum": ["STANDARD", "CDC"],
              "order": 8
            }
          },
          "required": ["host", "port", "database", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "description": "The password associated with the username.",
              "title": "Password",
              "type": "string",
              "order": 4
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-my-hours",
        "name": "My Hours",
        "description": "Airbyte connector for My Hours. For more information, see https://docs.airbyte.io/integrations/sources/my-hours",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "my-hours",
        "canonicalDataSourceName": "my-hours",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "email": {
              "title": "Email",
              "type": "string",
              "description": "Your My Hours username",
              "example": "john@doe.com"
            },
            "start_date": {
              "title": "Start Date",
              "description": "Start date for collecting time logs",
              "examples": ["%Y-%m-%d", "2016-01-01"],
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "logs_batch_size": {
              "title": "Time logs batch size",
              "description": "Pagination size used for retrieving logs in days",
              "examples": [30],
              "type": "integer",
              "minimum": 1,
              "maximum": 365,
              "default": 30
            }
          },
          "required": ["email", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "title": "Password",
              "type": "string",
              "description": "The password associated to the username"
            }
          },
          "required": ["password"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-mysql",
        "name": "MySQL",
        "description": "Airbyte connector for MySQL. For more information, see https://docs.airbyte.io/integrations/sources/mysql",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "mysql",
        "canonicalDataSourceName": "mysql",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "description": "The host name of the database.",
              "title": "Host",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "The port to connect to.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 3306,
              "examples": ["3306"],
              "order": 1
            },
            "database": {
              "description": "The database name.",
              "title": "Database",
              "type": "string",
              "order": 2
            },
            "username": {
              "description": "The username which is used to access the database.",
              "title": "Username",
              "type": "string",
              "order": 3
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": true,
              "order": 6
            },
            "replication_method": {
              "type": "string",
              "title": "Replication Method",
              "description": "Replication method which is used for data extraction from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses the Binlog to detect inserts, updates, and deletes. This needs to be configured on the source database itself.",
              "order": 7,
              "default": "STANDARD",
              "enum": ["STANDARD", "CDC"]
            }
          },
          "required": [
            "host",
            "port",
            "database",
            "username",
            "replication_method"
          ]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "description": "The password associated with the username.",
              "title": "Password",
              "type": "string",
              "order": 4
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-notion",
        "name": "Notion",
        "description": "Airbyte connector for Notion. For more information, see https://docs.airbyte.io/integrations/sources/notion",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "notion",
        "canonicalDataSourceName": "notion",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Notion API, in the format YYYY-MM-DDT00:00:00.000Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00.000Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "Notion API access token, see the <a href=\"https://developers.notion.com/docs/authorization\">docs</a> for more information on how to obtain this token."
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-okta",
        "name": "Okta",
        "description": "Airbyte connector for Okta. For more information, see https://docs.airbyte.io/integrations/sources/okta",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "okta",
        "canonicalDataSourceName": "okta",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "token": {
              "type": "string",
              "title": "API Token",
              "description": "A Okta token. See the <a href=\"https://docs.airbyte.io/integrations/sources/okta\">docs</a> for instructions on how to generate it."
            },
            "base_url": {
              "type": "string",
              "title": "Base URL",
              "description": "The Okta base URL."
            }
          },
          "required": ["token", "base_url"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-onesignal",
        "name": "OneSignal",
        "description": "Airbyte connector for OneSignal. For more information, see https://docs.airbyte.io/integrations/sources/onesignal",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "onesignal",
        "canonicalDataSourceName": "onesignal",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for OneSignal API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "outcome_names": {
              "type": "string",
              "title": "Outcome Names",
              "description": "Comma-separated list of names and the value (sum/count) for the returned outcome data. See the <a href=\"https://documentation.onesignal.com/reference/view-outcomes\">docs</a> for more details",
              "examples": [
                "os__session_duration.count,os__click.count,CustomOutcomeName.sum"
              ]
            }
          },
          "required": ["start_date", "outcome_names"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "user_auth_key": {
              "type": "string",
              "title": "User Auth Key",
              "description": "OneSignal User Auth Key, see the <a href=\"https://documentation.onesignal.com/docs/accounts-and-keys#user-auth-key\">docs</a> for more information on how to obtain this key."
            }
          },
          "required": ["user_auth_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-openweather",
        "name": "OpenWeather",
        "description": "Airbyte connector for OpenWeather. For more information, see https://docs.airbyte.io/integrations/sources/openweather",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "openweather",
        "canonicalDataSourceName": "openweather",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "lat": {
              "title": "Latitude",
              "type": "string",
              "pattern": "^[-]?\\d{1,2}(\\.\\d+)?$",
              "examples": ["45.7603", "-21.249107858038816"],
              "description": "Latitude for which you want to get weather condition from. (min -90, max 90)"
            },
            "lon": {
              "title": "Longitude",
              "type": "string",
              "pattern": "^[-]?\\d{1,3}(\\.\\d+)?$",
              "examples": ["4.835659", "-70.39482074115321"],
              "description": "Longitude for which you want to get weather condition from. (min -180, max 180)"
            },
            "units": {
              "title": "Units",
              "type": "string",
              "description": "Units of measurement. standard, metric and imperial units are available. If you do not use the units parameter, standard units will be applied by default.",
              "enum": ["standard", "metric", "imperial"],
              "examples": ["standard", "metric", "imperial"]
            },
            "lang": {
              "title": "Language",
              "type": "string",
              "description": "You can use lang parameter to get the output in your language. The contents of the description field will be translated. See <a href=\"https://openweathermap.org/api/one-call-api#multi\">here</a> for the list of supported languages.",
              "enum": [
                "af",
                "al",
                "ar",
                "az",
                "bg",
                "ca",
                "cz",
                "da",
                "de",
                "el",
                "en",
                "eu",
                "fa",
                "fi",
                "fr",
                "gl",
                "he",
                "hi",
                "hr",
                "hu",
                "id",
                "it",
                "ja",
                "kr",
                "la",
                "lt",
                "mk",
                "no",
                "nl",
                "pl",
                "pt",
                "pt_br",
                "ro",
                "ru",
                "sv",
                "se",
                "sk",
                "sl",
                "sp",
                "es",
                "sr",
                "th",
                "tr",
                "ua",
                "uk",
                "vi",
                "zh_cn",
                "zh_tw",
                "zu"
              ],
              "examples": ["en", "fr", "pt_br", "uk", "zh_cn", "zh_tw"]
            }
          },
          "required": ["lat", "lon"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "appid": {
              "title": "App ID",
              "type": "string",
              "description": "Your OpenWeather API Key. See <a href=\"https://openweathermap.org/api\">here</a>. The key is case sensitive."
            }
          },
          "required": ["appid"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-oracle",
        "name": "Oracle DB",
        "description": "Airbyte connector for Oracle DB. For more information, see https://docs.airbyte.io/integrations/sources/oracle",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "oracle",
        "canonicalDataSourceName": "oracle",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string"
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.\nOracle Corporations recommends the following port numbers:\n1521 - Default listening port for client connections to the listener. \n2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 1521
            },
            "sid": {
              "title": "SID (Oracle System Identifier)",
              "type": "string"
            },
            "username": {
              "title": "User",
              "description": "The username which is used to access the database.",
              "type": "string"
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas to sync from. Defaults to user. Case sensitive.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": ["host", "port", "sid", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "title": "Password",
              "description": "The password associated with the username.",
              "type": "string"
            },
            "encryption": {
              "title": "Encryption",
              "type": "object",
              "description": "The encryption method with is used when communicating with the database.",
              "order": 6,
              "oneOf": [
                {
                  "title": "Unencrypted",
                  "additionalProperties": false,
                  "description": "Data transfer will not be encrypted.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "unencrypted",
                      "enum": ["unencrypted"],
                      "default": "unencrypted"
                    }
                  }
                },
                {
                  "title": "Native Network Encryption (NNE)",
                  "additionalProperties": false,
                  "description": "The native network encryption gives you the ability to encrypt database connections, without the configuration overhead of TCP/IP and SSL/TLS and without the need to open and listen on different ports.",
                  "required": ["encryption_method"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "client_nne",
                      "enum": ["client_nne"],
                      "default": "client_nne"
                    },
                    "encryption_algorithm": {
                      "type": "string",
                      "description": "This parameter defines what encryption algorithm is used.",
                      "title": "Encryption Algorithm",
                      "default": "AES256",
                      "enum": ["AES256", "RC4_56", "3DES168"]
                    }
                  }
                },
                {
                  "title": "TLS Encrypted (verify certificate)",
                  "additionalProperties": false,
                  "description": "Verify and use the certificate provided by the server.",
                  "required": ["encryption_method", "ssl_certificate"],
                  "properties": {
                    "encryption_method": {
                      "type": "string",
                      "const": "encrypted_verify_certificate",
                      "enum": ["encrypted_verify_certificate"],
                      "default": "encrypted_verify_certificate"
                    },
                    "ssl_certificate": {
                      "title": "SSL PEM File",
                      "description": "Privacy Enhanced Mail (PEM) files are concatenated certificate containers frequently used in certificate installations.",
                      "type": "string",
                      "multiline": true,
                      "order": 4
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-orb",
        "name": "Orb",
        "description": "Airbyte connector for Orb. For more information, see https://docs.airbyte.io/integrations/sources/orb",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "orb",
        "canonicalDataSourceName": "orb",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2022-03-01T00:00:00Z. Any data with created_at before this data will not be synced.",
              "examples": ["2022-03-01T00:00:00Z"],
              "order": 2
            },
            "lookback_window_days": {
              "type": "integer",
              "title": "Lookback Window (in days)",
              "default": 0,
              "minimum": 0,
              "description": "When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced.",
              "order": 3
            },
            "string_event_properties_keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Event properties keys (string values)",
              "description": "Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.",
              "order": 4
            },
            "numeric_event_properties_keys": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Event properties keys (numeric values)",
              "description": "Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.",
              "order": 5
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "Orb API Key",
              "description": "Orb API Key, issued from the Orb admin console.",
              "order": 1
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-outreach",
        "name": "Outreach",
        "description": "Airbyte connector for Outreach. For more information, see https://docs.airbyte.io/integrations/sources/outreach",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "outreach",
        "canonicalDataSourceName": "outreach",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Outreach developer application."
            },
            "redirect_uri": {
              "type": "string",
              "title": "Redirect URI",
              "description": "A Redirect URI is the location where the authorization server sends the user once the app has been successfully authorized and granted an authorization code or access token."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Outreach API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["client_id", "redirect_uri", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Outreach developer application."
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "The token for obtaining the new access token."
            }
          },
          "required": ["client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-paypal-transaction",
        "name": "Paypal Transaction",
        "description": "Airbyte connector for Paypal Transaction. For more information, see https://docs.airbyte.io/integrations/sources/paypal-transactions",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "paypal-transaction",
        "canonicalDataSourceName": "paypal-transaction",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID of your Paypal developer application."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Start Date for data extraction in <a href=\"https://datatracker.ietf.org/doc/html/rfc3339#section-5.6\">ISO format</a>. Date must be in range from 3 years till 12 hrs before present time.",
              "examples": ["2021-06-11T23:59:59-00:00"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[+-][0-9]{2}:[0-9]{2}$"
            },
            "is_sandbox": {
              "title": "Sandbox",
              "description": "Determines whether to use the sandbox or production environment.",
              "type": "boolean",
              "default": false
            }
          },
          "required": ["client_id", "start_date", "is_sandbox"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret of your Paypal developer application."
            }
          },
          "required": ["secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-paystack",
        "name": "Paystack",
        "description": "Airbyte connector for Paystack. For more information, see https://docs.airbyte.io/integrations/sources/paystack",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "paystack",
        "canonicalDataSourceName": "paystack",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"]
            },
            "lookback_window_days": {
              "type": "integer",
              "title": "Lookback Window (in days)",
              "default": 0,
              "minimum": 0,
              "description": "When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation."
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "secret_key": {
              "type": "string",
              "title": "Secret Key",
              "pattern": "^(s|r)k_(live|test)_[a-zA-Z0-9]+$",
              "description": "The Paystack API key (usually starts with 'sk_live_'; find yours <a href=\"https://dashboard.paystack.com/#/settings/developer\">here</a>)."
            }
          },
          "required": ["secret_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-persistiq",
        "name": "PersistIq",
        "description": "Airbyte connector for PersistIq. For more information, see https://docs.airbyte.io/integrations/sources/persistiq",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "persistiq",
        "canonicalDataSourceName": "persistiq",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "PersistIq API Key. See the <a href=\"https://apidocs.persistiq.com/#authentication\">docs</a> for more information on where to find that key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-pinterest",
        "name": "Pinterest",
        "description": "Airbyte connector for Pinterest. For more information, see https://docs.airbyte.io/integrations/sources/pinterest",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "pinterest",
        "canonicalDataSourceName": "pinterest",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to 2020-07-28.",
              "examples": ["2020-07-28"]
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Your Pinterest client ID. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\">docs</a> for instructions on how to generate it."
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "Your Pinterest client secret. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\">docs</a> for instructions on how to generate it."
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "Your Pinterest refresh token. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\">docs</a> for instructions on how to generate it."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "Your Pinterest access token. See the <a href=\"https://developers.pinterest.com/docs/api/v5/#tag/Authentication\">docs</a> for instructions on how to generate it."
            }
          },
          "required": ["client_id", "client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-pipedrive",
        "name": "Pipedrive",
        "description": "Airbyte connector for Pipedrive. For more information, see https://docs.airbyte.io/integrations/sources/pipedrive",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "pipedrive",
        "canonicalDataSourceName": "pipedrive",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "replication_start_date": {
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2017-01-25T00:00:00Z"],
              "type": "string"
            }
          },
          "required": ["replication_start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "authorization": {
              "type": "object",
              "title": "Authentication Type",
              "description": "Choose one of the possible authorization method",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API Key Authentication",
                  "required": ["auth_type", "api_token"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "order": 0
                    },
                    "api_token": {
                      "title": "API Token",
                      "type": "string",
                      "description": "The Pipedrive API Token."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-pivotal-tracker",
        "name": "Pivotal Tracker",
        "description": "Airbyte connector for Pivotal Tracker. For more information, see https://docs.airbyte.io/integrations/sources/pivotal-tracker",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "pivotal-tracker",
        "canonicalDataSourceName": "pivotal-tracker",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "type": "string",
              "description": "Pivotal Tracker API token",
              "examples": ["5c054d0de3440452190fdc5d5a04d871"]
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-plaid",
        "name": "Plaid",
        "description": "Airbyte connector for Plaid. For more information, see https://docs.airbyte.io/integrations/sources/plaid",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "plaid",
        "canonicalDataSourceName": "plaid",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Plaid client id"
            },
            "plaid_env": {
              "title": "Plaid Environment",
              "type": "string",
              "enum": ["sandbox", "development", "production"],
              "description": "The Plaid environment"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate data for Plaid in the format YYYY-MM-DD. All data generated after this date will be replicated.",
              "examples": ["2021-03-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          "required": ["client_id", "plaid_env"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "The end-user's Link access token."
            },
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": "The Plaid API key to use to hit the API."
            }
          },
          "required": ["access_token", "api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-postgres",
        "name": "PostgreSQL",
        "description": "Airbyte connector for PostgreSQL. For more information, see https://docs.airbyte.io/integrations/sources/postgres",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "postgres",
        "canonicalDataSourceName": "postgres",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "title": "Host",
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5432,
              "examples": ["5432"],
              "order": 1
            },
            "database": {
              "title": "DB Name",
              "description": "Name of the database.",
              "type": "string",
              "order": 2
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas to sync from. Defaults to user. Case sensitive.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "uniqueItems": true,
              "default": ["public"],
              "order": 3
            },
            "username": {
              "title": "User",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 4
            },
            "ssl": {
              "title": "Connect using SSL",
              "description": "Encrypt client/server communications for increased security.",
              "type": "boolean",
              "default": false,
              "order": 6
            },
            "replication_method": {
              "type": "object",
              "title": "Replication Method",
              "description": "Replication method to use for extracting data from the database.",
              "order": 7,
              "oneOf": [
                {
                  "title": "Standard",
                  "additionalProperties": false,
                  "description": "Standard replication requires no setup on the DB side but will not be able to represent deletions incrementally.",
                  "required": ["method"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "Standard",
                      "enum": ["Standard"],
                      "default": "Standard",
                      "order": 0
                    }
                  }
                },
                {
                  "title": "Logical Replication (CDC)",
                  "additionalProperties": false,
                  "description": "Logical replication uses the Postgres write-ahead log (WAL) to detect inserts, updates, and deletes. This needs to be configured on the source database itself. Only available on Postgres 10 and above. Read the <a href=\"https://docs.airbyte.com/integrations/sources/postgres\">Postgres Source</a> docs for more information.",
                  "required": ["method", "replication_slot", "publication"],
                  "properties": {
                    "method": {
                      "type": "string",
                      "const": "CDC",
                      "enum": ["CDC"],
                      "default": "CDC",
                      "order": 0
                    },
                    "plugin": {
                      "type": "string",
                      "title": "Plugin",
                      "description": "A logical decoding plug-in installed on the PostgreSQL server. `pgoutput` plug-in is used by default.\nIf replication table contains a lot of big jsonb values it is recommended to use `wal2json` plug-in. For more information about `wal2json` plug-in read <a href=\"https://docs.airbyte.com/integrations/sources/postgres\">Postgres Source</a> docs.",
                      "enum": ["pgoutput", "wal2json"],
                      "default": "pgoutput",
                      "order": 1
                    },
                    "replication_slot": {
                      "type": "string",
                      "title": "Replication Slot",
                      "description": "A plug-in logical replication slot.",
                      "order": 2
                    },
                    "publication": {
                      "type": "string",
                      "title": "Publication",
                      "description": "A Postgres publication used for consuming changes.",
                      "order": 3
                    }
                  }
                }
              ]
            }
          },
          "required": ["host", "port", "database", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "order": 5
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-posthog",
        "name": "PostHog",
        "description": "Airbyte connector for PostHog. For more information, see https://docs.airbyte.io/integrations/sources/posthog",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "posthog",
        "canonicalDataSourceName": "posthog",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate the data. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-01T00:00:00Z"]
            },
            "base_url": {
              "type": "string",
              "default": "https://app.posthog.com",
              "title": "Base URL",
              "description": "Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com).",
              "examples": ["https://posthog.example.com"]
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "API Key. See the <a href=\"https://docs.airbyte.com/integrations/sources/posthog\">docs</a> for information on how to generate this key."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-prestashop",
        "name": "Prestashop",
        "description": "Airbyte connector for Prestashop. For more information, see https://docs.airbyte.io/integrations/sources/presta-shop",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "prestashop",
        "canonicalDataSourceName": "prestashop",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "url": {
              "type": "string",
              "description": "Shop URL without trailing slash (domain name or IP address)"
            }
          },
          "required": ["url"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_key": {
              "type": "string",
              "description": "Your PrestaShop access key. See <a href=\"https://devdocs.prestashop.com/1.7/webservice/tutorials/creating-access/#create-an-access-key\"> the docs </a> for info on how to obtain this."
            }
          },
          "required": ["access_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-qualaroo",
        "name": "Qualaroo",
        "description": "Airbyte connector for Qualaroo. For more information, see https://docs.airbyte.io/integrations/sources/qualaroo",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "qualaroo",
        "canonicalDataSourceName": "qualaroo",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-03-01T00:00:00.000Z"]
            },
            "survey_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9a-fA-F]{24}$"
              },
              "title": "Qualaroo survey IDs",
              "description": "IDs of the surveys from which you'd like to replicate data. If left empty, data from all surveys to which you have access will be replicated."
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "token": {
              "type": "string",
              "title": "API token",
              "description": "A Qualaroo token. See the <a href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\">docs</a> for instructions on how to generate it."
            },
            "key": {
              "type": "string",
              "title": "API key",
              "description": "A Qualaroo token. See the <a href=\"https://help.qualaroo.com/hc/en-us/articles/201969438-The-REST-Reporting-API\">docs</a> for instructions on how to generate it."
            }
          },
          "required": ["token", "key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-quickbooks-singer",
        "name": "QuickBooks",
        "description": "Airbyte connector for QuickBooks. For more information, see https://docs.airbyte.io/integrations/sources/quickbooks",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "quickbooks-singer",
        "canonicalDataSourceName": "quickbooks-singer",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Identifies which app is making the request. Obtain this value from the Keys tab on the app profile via My Apps on the developer site. There are two versions of this key: development and production."
            },
            "user_agent": {
              "type": "string",
              "title": "User Agent",
              "description": "Process and email for API logging purposes. Example: tap-quickbooks <api_user_email@your_company.com>."
            },
            "start_date": {
              "description": "The default value to use if no bookmark exists for an endpoint (rfc3339 date string). E.g, 2021-03-20T00:00:00Z. Any data before this date will not be replicated.",
              "title": "Start Date",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-03-20T00:00:00Z"]
            },
            "sandbox": {
              "description": "Determines whether to use the sandbox or production environment.",
              "title": "Sandbox",
              "type": "boolean",
              "default": false
            }
          },
          "required": ["client_id", "user_agent", "start_date", "sandbox"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "description": " Obtain this value from the Keys tab on the app profile via My Apps on the developer site. There are two versions of this key: development and production.",
              "title": "Client Secret",
              "type": "string"
            },
            "refresh_token": {
              "description": "A token used when refreshing the access token.",
              "title": "Refresh Token",
              "type": "string"
            },
            "realm_id": {
              "description": "Labeled Company ID. The Make API Calls panel is populated with the realm id and the current access token.",
              "title": "Realm ID",
              "type": "string"
            }
          },
          "required": ["client_secret", "refresh_token", "realm_id"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-recharge",
        "name": "Recharge",
        "description": "Airbyte connector for Recharge. For more information, see https://docs.airbyte.io/integrations/sources/recharge",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "recharge",
        "canonicalDataSourceName": "recharge",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-05-14T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "type": "string",
              "title": "Access Token",
              "description": "The value of the Access Token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/recharge\">docs</a> for more information."
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-recurly",
        "name": "Recurly",
        "description": "Airbyte connector for Recurly. For more information, see https://docs.airbyte.io/integrations/sources/recurly",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "recurly",
        "canonicalDataSourceName": "recurly",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "begin_time": {
              "type": "string",
              "description": "ISO8601 timestamp from which the replication from Recurly API will start from.",
              "examples": ["2021-12-01T00:00:00"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "order": 2
            },
            "end_time": {
              "type": "string",
              "description": "ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.",
              "examples": ["2021-12-01T00:00:00"],
              "pattern": "^$|^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}$",
              "order": 3
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "title": "API Key",
              "description": "Recurly API Key. See the  <a href=\"https://docs.airbyte.com/integrations/sources/recurly\">docs</a> for more information on how to generate this key.",
              "order": 1
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-redshift",
        "name": "Redshift",
        "description": "Airbyte connector for Redshift. For more information, see https://docs.airbyte.io/integrations/destinations/redshift",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "redshift",
        "canonicalDataSourceName": "redshift",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "title": "Host",
              "description": "Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).",
              "type": "string",
              "order": 1
            },
            "port": {
              "title": "Port",
              "description": "Port of the database.",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 5439,
              "examples": ["5439"],
              "order": 2
            },
            "database": {
              "title": "Database",
              "description": "Name of the database.",
              "type": "string",
              "examples": ["master"],
              "order": 3
            },
            "schemas": {
              "title": "Schemas",
              "description": "The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "uniqueItems": true,
              "examples": ["public"],
              "order": 4
            },
            "username": {
              "title": "Username",
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 5
            }
          },
          "required": ["host", "port", "database", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "title": "Password",
              "description": "Password associated with the username.",
              "type": "string",
              "order": 6
            }
          },
          "required": ["password"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-retently",
        "name": "Retently",
        "description": "Airbyte connector for Retently. For more information, see https://docs.airbyte.io/integrations/sources/retently",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "retently",
        "canonicalDataSourceName": "retently",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication Mechanism",
              "description": "Choose how to authenticate to Retently",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Authenticate with API Token",
                  "required": ["api_key"],
                  "additionalProperties": false,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Token",
                      "enum": ["Token"],
                      "default": "Token",
                      "order": 0
                    },
                    "api_key": {
                      "title": "API Token",
                      "description": "Retently API Token. See the <a href=\"https://app.retently.com/settings/api/tokens\">docs</a> for more information on how to obtain this key.",
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-s3",
        "name": "S3",
        "description": "Airbyte connector for S3. For more information, see https://docs.airbyte.io/integrations/sources/s3",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "s3",
        "canonicalDataSourceName": "s3",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "dataset": {
              "title": "Output Stream Name",
              "description": "The name of the stream you would like this source to output. Can contain letters, numbers, or underscores.",
              "pattern": "^([A-Za-z0-9-_]+)$",
              "order": 0,
              "type": "string"
            },
            "path_pattern": {
              "title": "Pattern of files to replicate",
              "description": "A regular expression which tells the connector which files to replicate. All files which match this pattern will be replicated. Use | to separate multiple patterns. See <a href=\"https://facelessuser.github.io/wcmatch/glob/\" target=\"_blank\">this page</a> to understand pattern syntax (GLOBSTAR and SPLIT flags are enabled). Use pattern <strong>**</strong> to pick up all files.",
              "examples": [
                "**",
                "myFolder/myTableFiles/*.csv|myFolder/myOtherTableFiles/*.csv"
              ],
              "order": 10,
              "type": "string"
            },
            "format": {
              "title": "File Format",
              "description": "The format of the files you'd like to replicate",
              "default": "csv",
              "order": 20,
              "type": "object",
              "oneOf": [
                {
                  "title": "CSV",
                  "description": "This connector utilises <a href=\"https: // arrow.apache.org/docs/python/generated/pyarrow.csv.open_csv.html\" target=\"_blank\">PyArrow (Apache Arrow)</a> for CSV parsing.",
                  "type": "object",
                  "properties": {
                    "filetype": {
                      "title": "Filetype",
                      "const": "csv",
                      "type": "string"
                    },
                    "delimiter": {
                      "title": "Delimiter",
                      "description": "The character delimiting individual cells in the CSV data. This may only be a 1-character string. For tab-delimited data enter '\\t'.",
                      "default": ",",
                      "minLength": 1,
                      "order": 0,
                      "type": "string"
                    },
                    "infer_datatypes": {
                      "title": "Infer Datatypes",
                      "description": "Configures whether a schema for the source should be inferred from the current data or not. If set to false and a custom schema is set, then the manually enforced schema is used. If a schema is not manually set, and this is set to false, then all fields will be read as strings",
                      "default": true,
                      "order": 1,
                      "type": "boolean"
                    },
                    "quote_char": {
                      "title": "Quote Character",
                      "description": "The character used for quoting CSV values. To disallow quoting, make this field blank.",
                      "default": "\"",
                      "order": 2,
                      "type": "string"
                    },
                    "escape_char": {
                      "title": "Escape Character",
                      "description": "The character used for escaping special characters. To disallow escaping, leave this field blank.",
                      "order": 3,
                      "type": "string"
                    },
                    "encoding": {
                      "title": "Encoding",
                      "description": "The character encoding of the CSV data. Leave blank to default to <strong>UTF8</strong>. See <a href=\"https://docs.python.org/3/library/codecs.html#standard-encodings\" target=\"_blank\">list of python encodings</a> for allowable options.",
                      "default": "utf8",
                      "order": 4,
                      "type": "string"
                    },
                    "double_quote": {
                      "title": "Double Quote",
                      "description": "Whether two quotes in a quoted CSV value denote a single quote in the data.",
                      "default": true,
                      "order": 5,
                      "type": "boolean"
                    },
                    "newlines_in_values": {
                      "title": "Allow newlines in values",
                      "description": "Whether newline characters are allowed in CSV values. Turning this on may affect performance. Leave blank to default to False.",
                      "default": false,
                      "order": 6,
                      "type": "boolean"
                    },
                    "additional_reader_options": {
                      "title": "Additional Reader Options",
                      "description": "Optionally add a valid JSON string here to provide additional options to the csv reader. Mappings must correspond to options <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions\" target=\"_blank\">detailed here</a>. 'column_types' is used internally to handle schema so overriding that would likely cause problems.",
                      "default": "{}",
                      "examples": [
                        "{\"timestamp_parsers\": [\"%m/%d/%Y %H:%M\", \"%Y/%m/%d %H:%M\"], \"strings_can_be_null\": true, \"null_values\": [\"NA\", \"NULL\"]}"
                      ],
                      "order": 7,
                      "type": "string"
                    },
                    "advanced_options": {
                      "title": "Advanced Options",
                      "description": "Optionally add a valid JSON string here to provide additional <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.csv.ReadOptions.html#pyarrow.csv.ReadOptions\" target=\"_blank\">Pyarrow ReadOptions</a>. Specify 'column_names' here if your CSV doesn't have header, or if you want to use custom column names. 'block_size' and 'encoding' are already used above, specify them again here will override the values above.",
                      "default": "{}",
                      "examples": [
                        "{\"column_names\": [\"column1\", \"column2\"]}"
                      ],
                      "order": 8,
                      "type": "string"
                    },
                    "block_size": {
                      "title": "Block Size",
                      "description": "The chunk size in bytes to process at a time in memory from each file. If your data is particularly wide and failing during schema detection, increasing this should solve it. Beware of raising this too high as you could hit OOM errors.",
                      "default": 10000,
                      "order": 9,
                      "type": "integer"
                    }
                  }
                },
                {
                  "title": "Parquet",
                  "description": "This connector utilises <a href=\"https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetFile.html\" target=\"_blank\">PyArrow (Apache Arrow)</a> for Parquet parsing.",
                  "type": "object",
                  "properties": {
                    "filetype": {
                      "title": "Filetype",
                      "const": "parquet",
                      "type": "string"
                    },
                    "columns": {
                      "title": "Selected Columns",
                      "description": "If you only want to sync a subset of the columns from the file(s), add the columns you want here as a comma-delimited list. Leave it empty to sync all columns.",
                      "order": 0,
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "batch_size": {
                      "title": "Record batch size",
                      "description": "Maximum number of records per batch read from the input files. Batches may be smaller if there aren’t enough rows in the file. This option can help avoid out-of-memory errors if your data is particularly wide.",
                      "default": 65536,
                      "order": 1,
                      "type": "integer"
                    },
                    "buffer_size": {
                      "title": "Buffer Size",
                      "description": "Perform read buffering when deserializing individual column chunks. By default every group column will be loaded fully to memory. This option can help avoid out-of-memory errors if your data is particularly wide.",
                      "default": 2,
                      "type": "integer"
                    }
                  }
                }
              ]
            },
            "schema": {
              "title": "Manually enforced data schema (Optional)",
              "description": "Optionally provide a schema to enforce, as a valid JSON string. Ensure this is a mapping of <strong>{ \"column\" : \"type\" }</strong>, where types are valid <a href=\"https://json-schema.org/understanding-json-schema/reference/type.html\" target=\"_blank\">JSON Schema datatypes</a>. Leave as {} to auto-infer the schema.",
              "default": "{}",
              "examples": [
                "{\"column_1\": \"number\", \"column_2\": \"string\", \"column_3\": \"array\", \"column_4\": \"object\", \"column_5\": \"boolean\"}"
              ],
              "order": 30,
              "type": "string"
            }
          },
          "required": ["dataset", "path_pattern"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "provider": {
              "title": "S3: Amazon Web Services",
              "type": "object",
              "properties": {
                "bucket": {
                  "title": "Bucket",
                  "description": "Name of the S3 bucket where the file(s) exist.",
                  "order": 0,
                  "type": "string"
                },
                "aws_access_key_id": {
                  "title": "AWS Access Key ID",
                  "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                  "order": 1,
                  "type": "string"
                },
                "aws_secret_access_key": {
                  "title": "AWS Secret Access Key",
                  "description": "In order to access private Buckets stored on AWS S3, this connector requires credentials with the proper permissions. If accessing publicly available data, this field is not necessary.",
                  "order": 2,
                  "type": "string"
                },
                "path_prefix": {
                  "title": "Path Prefix",
                  "description": "By providing a path-like prefix (e.g. myFolder/thisTable/) under which all the relevant files sit, we can optimize finding these in S3. This is optional but recommended if your bucket contains many folders/files which you don't need to replicate.",
                  "default": "",
                  "order": 3,
                  "type": "string"
                },
                "endpoint": {
                  "title": "Endpoint",
                  "description": "Endpoint to an S3 compatible service. Leave empty to use AWS.",
                  "default": "",
                  "order": 4,
                  "type": "string"
                },
                "use_ssl": {
                  "title": "Use TLS",
                  "description": "Whether the remote server is using a secure SSL/TLS connection. Only relevant if using an S3-compatible, non-AWS server",
                  "order": 5,
                  "type": "boolean"
                },
                "verify_ssl_cert": {
                  "title": "Verify TLS Certificates",
                  "description": "Set this to false to allow self signed certificates. Only relevant if using an S3-compatible, non-AWS server",
                  "order": 6,
                  "type": "boolean"
                }
              },
              "required": ["bucket"],
              "order": 11,
              "description": "Use this to load files from S3 or S3-compatible services"
            }
          },
          "required": ["provider"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-salesforce",
        "name": "Salesforce",
        "description": "Airbyte connector for Salesforce. For more information, see https://docs.airbyte.io/integrations/sources/salesforce",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "salesforce",
        "canonicalDataSourceName": "salesforce",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "is_sandbox": {
              "title": "Sandbox",
              "description": "Whether the app is in a Salesforce sandbox or not. If you do not know what this is, assume it as false. We provide more info on this field in the <a href=\"https://docs.airbyte.com/integrations/sources/salesforce#sandbox-accounts\">docs</a>.",
              "type": "boolean",
              "default": false,
              "order": 1
            },
            "auth_type": {
              "type": "string",
              "const": "Client"
            },
            "client_id": {
              "title": "Client ID",
              "description": "The Client ID of your Salesforce developer application.",
              "type": "string",
              "order": 2
            },
            "start_date": {
              "title": "Start Date",
              "description": "Date in the format 2017-01-25. Any data before this date will not be replicated. This field uses the \"updated\" field if available, otherwise the \"created\" fields if they are available for a stream. If not set, then by default all your data is replicated.",
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z|[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "examples": ["2021-07-25", "2021-07-25T00:00:00Z"],
              "order": 5
            },
            "streams_criteria": {
              "type": "array",
              "order": 6,
              "items": {
                "type": "object",
                "required": ["criteria", "value"],
                "properties": {
                  "criteria": {
                    "type": "string",
                    "title": "Search criteria",
                    "enum": [
                      "starts with",
                      "ends with",
                      "contains",
                      "exacts",
                      "starts not with",
                      "ends not with",
                      "not contains",
                      "not exacts"
                    ],
                    "order": 1,
                    "default": "contains"
                  },
                  "value": {
                    "type": "string",
                    "title": "Search value",
                    "order": 2
                  }
                }
              },
              "title": "Salesforce Object filtering criteria (Optional)",
              "description": "Add selection criteria for streams to read only the Salesforce objects which are relevant to you."
            }
          },
          "required": ["client_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "title": "Client Secret",
              "description": "The Client Secret of your Salesforce developer application.",
              "type": "string",
              "order": 3
            },
            "refresh_token": {
              "title": "Refresh Token",
              "description": "Salesforce Refresh Token used for Airbyte to access your Salesforce account. If you don't know what this is, follow this <a href=\"https://medium.com/@bpmmendis94/obtain-access-refresh-tokens-from-salesforce-rest-api-a324fe4ccd9b\">guide</a> to retrieve it.",
              "type": "string",
              "order": 4
            }
          },
          "required": ["client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-salesloft",
        "name": "SalesLoft",
        "description": "Airbyte connector for SalesLoft. For more information, see https://docs.airbyte.io/integrations/sources/salesloft",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "salesloft",
        "canonicalDataSourceName": "salesloft",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "The Client ID of your Salesloft developer application."
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Salesloft API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-11-16T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            }
          },
          "required": ["client_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "The Client Secret of your Salesloft developer application."
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "The token for obtaining a new access token."
            }
          },
          "required": ["client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-search-metrics",
        "name": "SearchMetrics",
        "description": "Airbyte connector for SearchMetrics. For more information, see https://docs.airbyte.io/integrations/sources/seacrh-metrics",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "search-metrics",
        "canonicalDataSourceName": "search-metrics",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "country_code": {
              "title": "Country Code",
              "type": "string",
              "default": "",
              "description": "The region of the S3 staging bucket to use if utilising a copy strategy.",
              "enum": [
                "",
                "AR",
                "AU",
                "AT",
                "BE",
                "BR",
                "CA",
                "CN",
                "CO",
                "DK",
                "FI",
                "FR",
                "DE",
                "HK",
                "IN",
                "IE",
                "IT",
                "JP",
                "MX",
                "NL",
                "NO",
                "PL",
                "RU",
                "SG",
                "ZA",
                "ES",
                "SE",
                "CH",
                "TR",
                "US",
                "GB"
              ],
              "order": 2
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "Data generated in SearchMetrics after this date will be replicated. This date must be specified in the format YYYY-MM-DDT00:00:00Z.",
              "examples": ["20200925"],
              "pattern": "^[0-9]{4}[0-9]{2}[0-9]{2}$"
            }
          },
          "required": ["country_code", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "title": "API Key",
              "type": "string",
              "description": ""
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": ""
            }
          },
          "required": ["api_key", "client_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-sendgrid",
        "name": "Sendgrid",
        "description": "Airbyte connector for Sendgrid. For more information, see https://docs.airbyte.io/integrations/sources/sendgrid",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "sendgrid",
        "canonicalDataSourceName": "sendgrid",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_time": {
              "type": "integer",
              "description": "Start time in timestamp integer format. Any data before this timestamp will not be replicated.",
              "examples": [1558359837]
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "apikey": {
              "type": "string",
              "description": "API Key, use <a href=\"https://app.sendgrid.com/settings/api_keys/\">admin</a> to generate this key."
            }
          },
          "required": ["apikey"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-sentry",
        "name": "Sentry",
        "description": "Airbyte connector for Sentry. For more information, see https://docs.airbyte.io/integrations/sources/sentry",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "sentry",
        "canonicalDataSourceName": "sentry",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "hostname": {
              "type": "string",
              "title": "Host Name",
              "description": "Host name of Sentry API server.For self-hosted, specify your host name here. Otherwise, leave it empty.",
              "default": "sentry.io"
            },
            "organization": {
              "type": "string",
              "title": "Organization",
              "description": "The slug of the organization the groups belong to."
            },
            "project": {
              "type": "string",
              "title": "Project",
              "description": "The name (slug) of the Project you want to sync."
            }
          },
          "required": ["organization", "project"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "auth_token": {
              "type": "string",
              "title": "Authentication Tokens",
              "description": "Log into Sentry and then <a href=\"https://sentry.io/settings/account/api/auth-tokens/\">create authentication tokens</a>.For self-hosted, you can find or create authentication tokens by visiting \"{instance_url_prefix}/settings/account/api/auth-tokens/\""
            }
          },
          "required": ["auth_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-shopify",
        "name": "Shopify",
        "description": "Airbyte connector for Shopify. For more information, see https://docs.airbyte.io/integrations/sources/shopify",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "shopify",
        "canonicalDataSourceName": "shopify",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "shop": {
              "type": "string",
              "title": "Shopify Store",
              "description": "The name of your Shopify store found in the URL. For example, if your URL was https://NAME.myshopify.com, then the name would be 'NAME'.",
              "order": 1
            },
            "start_date": {
              "type": "string",
              "title": "Replication Start Date",
              "description": "The date you would like to replicate data from. Format: YYYY-MM-DD. Any data before this date will not be replicated.",
              "examples": ["2021-01-01"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 3
            }
          },
          "required": ["shop", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Shopify Authorization Method",
              "description": "The authorization method to use to retrieve data from Shopify",
              "type": "object",
              "order": 2,
              "oneOf": [
                {
                  "title": "API Password",
                  "description": "API Password Auth",
                  "type": "object",
                  "required": ["auth_method", "api_password"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "api_password",
                      "order": 0
                    },
                    "api_password": {
                      "type": "string",
                      "title": "API Password",
                      "description": "The API Password for your private application in the `Shopify` store."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-shortio",
        "name": "Short.io",
        "description": "Airbyte connector for Short.io. For more information, see https://docs.airbyte.io/integrations/sources/shortio",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "shortio",
        "canonicalDataSourceName": "shortio",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "domain_id": {
              "type": "string",
              "desciprtion": "Short.io Domain ID",
              "title": "Domain ID"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated."
            }
          },
          "required": ["domain_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "secret_key": {
              "type": "string",
              "title": "Secret Key",
              "description": "Short.io Secret Key"
            }
          },
          "required": ["secret_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-slack",
        "name": "Slack",
        "description": "Airbyte connector for Slack. For more information, see https://docs.airbyte.io/integrations/sources/slack",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "slack",
        "canonicalDataSourceName": "slack",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "title": "Start Date"
            },
            "lookback_window": {
              "type": "integer",
              "title": "Threads Lookback window (Days)",
              "description": "How far into the past to look for messages in threads.",
              "examples": [7, 14]
            },
            "join_channels": {
              "type": "boolean",
              "default": true,
              "title": "Join all channels",
              "description": "Whether to join all channels or to sync data only from channels the bot is already in.  If false, you'll need to manually add the bot to all the channels from which you'd like to sync messages. "
            },
            "channel_filter": {
              "type": "array",
              "default": [],
              "items": {
                "type": "string",
                "minLength": 0
              },
              "title": "Channel name filter",
              "description": "A channel name list (without leading '#' char) which limit the channels from which you'd like to sync. Empty list means no filter.",
              "examples": ["channel_one", "channel_two"]
            }
          },
          "required": ["start_date", "lookback_window", "join_channels"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication mechanism",
              "description": "Choose how to authenticate into Slack",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["api_token", "option_title"],
                  "properties": {
                    "option_title": {
                      "type": "string",
                      "const": "API Token Credentials"
                    },
                    "api_token": {
                      "type": "string",
                      "title": "API Token",
                      "description": "A Slack bot token. See the <a href=\"https://docs.airbyte.io/integrations/sources/slack\">docs</a> for instructions on how to generate it."
                    }
                  },
                  "order": 1
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-smartsheets",
        "name": "Smartsheets",
        "description": "Airbyte connector for Smartsheets. For more information, see https://docs.airbyte.io/integrations/sources/smartsheets",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "smartsheets",
        "canonicalDataSourceName": "smartsheets",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "spreadsheet_id": {
              "title": "Sheet ID",
              "description": "The spreadsheet ID. Find it by opening the spreadsheet then navigating to File > Properties",
              "type": "string",
              "order": 1
            },
            "start_datetime": {
              "title": "Start Datetime (Optional)",
              "type": "string",
              "examples": ["2000-01-01T13:00:00", "2000-01-01T13:00:00-07:00"],
              "description": "Only rows modified after this date/time will be replicated. This should be an ISO 8601 string, for instance: `2000-01-01T13:00:00`",
              "format": "date-time",
              "default": "2020-01-01T00:00:00+00:00",
              "order": 2,
              "airbyte_hidden": true
            }
          },
          "required": ["spreadsheet_id"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "title": "Access Token",
              "description": "The access token to use for accessing your data from Smartsheets. This access token must be generated by a user with at least read access to the data you'd like to replicate. Generate an access token in the Smartsheets main menu by clicking Account > Apps & Integrations > API Access. See the <a href=\"https://docs.airbyte.io/integrations/sources/amplitude#setup-guide\">setup guide</a> for information on how to obtain this token.",
              "type": "string",
              "order": 0
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-snapchat-marketing",
        "name": "Snapchat Marketing",
        "description": "Airbyte connector for Snapchat Marketing. For more information, see https://docs.airbyte.io/integrations/sources/snapchat-marketing",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "snapchat-marketing",
        "canonicalDataSourceName": "snapchat-marketing",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-01-01"],
              "default": "1970-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_id": {
              "title": "Client ID",
              "type": "string",
              "description": "The Client ID of your Snapchat developer application."
            },
            "client_secret": {
              "title": "Client Secret",
              "type": "string",
              "description": "The Client Secret of your Snapchat developer application."
            },
            "refresh_token": {
              "title": "Refresh Token",
              "type": "string",
              "description": "Refresh Token to renew the expired Access Token."
            }
          },
          "required": ["client_id", "client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-snowflake",
        "name": "Snowflake",
        "description": "Airbyte connector for Snowflake. For more information, see https://docs.airbyte.io/integrations/sources/snowflake",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "snowflake",
        "canonicalDataSourceName": "snowflake",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "description": "The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).",
              "examples": ["accountname.us-east-2.aws.snowflakecomputing.com"],
              "type": "string",
              "title": "Account Name",
              "order": 1
            },
            "role": {
              "description": "The role you created for Airbyte to access Snowflake.",
              "examples": ["AIRBYTE_ROLE"],
              "type": "string",
              "title": "Role",
              "order": 2
            },
            "warehouse": {
              "description": "The warehouse you created for Airbyte to access data.",
              "examples": ["AIRBYTE_WAREHOUSE"],
              "type": "string",
              "title": "Warehouse",
              "order": 3
            },
            "database": {
              "description": "The database you created for Airbyte to access data.",
              "examples": ["AIRBYTE_DATABASE"],
              "type": "string",
              "title": "Database",
              "order": 4
            },
            "schema": {
              "description": "The source Snowflake schema tables.",
              "examples": ["AIRBYTE_SCHEMA"],
              "type": "string",
              "title": "Schema",
              "order": 5
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 6
            }
          },
          "required": ["host", "role", "warehouse", "database", "schema"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "title": "Username and Password",
                  "type": "object",
                  "required": ["username", "password", "auth_type"],
                  "order": 1,
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "username/password",
                      "default": "username/password",
                      "order": 0
                    },
                    "username": {
                      "description": "The username you created to allow Airbyte to access the database.",
                      "examples": ["AIRBYTE_USER"],
                      "type": "string",
                      "title": "Username",
                      "order": 1
                    },
                    "password": {
                      "description": "The password associated with the username.",
                      "type": "string",
                      "title": "Password",
                      "order": 2
                    }
                  }
                }
              ],
              "order": 0
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-square",
        "name": "Square",
        "description": "Airbyte connector for Square. For more information, see https://docs.airbyte.io/integrations/sources/square",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "square",
        "canonicalDataSourceName": "square",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "is_sandbox": {
              "type": "boolean",
              "description": "Determines whether to use the sandbox or production environment.",
              "title": "Sandbox",
              "examples": [true, false],
              "default": false
            },
            "start_date": {
              "type": "string",
              "description": "UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. If not set, all data will be replicated.",
              "title": "Start Date",
              "examples": ["2021-01-01"],
              "default": "2021-01-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "include_deleted_objects": {
              "type": "boolean",
              "description": "In some streams there is an option to include deleted objects (Items, Categories, Discounts, Taxes)",
              "title": "Include Deleted Objects",
              "examples": [true, false],
              "default": false
            }
          },
          "required": ["is_sandbox"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "type": "object",
              "title": "Credential Type",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API Key",
                  "required": ["auth_type", "api_key"],
                  "properties": {
                    "auth_type": {
                      "type": "string",
                      "const": "Apikey",
                      "enum": ["Apikey"],
                      "default": "Apikey",
                      "order": 1
                    },
                    "api_key": {
                      "title": "API key token",
                      "type": "string",
                      "description": "The API key for a Square application"
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-strava",
        "name": "Strava",
        "description": "Airbyte connector for Strava. For more information, see https://docs.airbyte.io/integrations/sources/strava",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "strava",
        "canonicalDataSourceName": "strava",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "auth_type": {
              "type": "string",
              "const": "Client",
              "enum": ["Client"],
              "default": "Client"
            },
            "client_id": {
              "type": "string",
              "description": "The Client ID of your Strava developer application.",
              "title": "Client ID",
              "pattern": "^[0-9_\\-]+$",
              "examples": ["12345"]
            },
            "athlete_id": {
              "type": "integer",
              "description": "The Athlete ID of your Strava developer application.",
              "title": "Athlete ID",
              "pattern": "^[0-9_\\-]+$",
              "examples": ["17831421"]
            },
            "start_date": {
              "type": "string",
              "description": "UTC date and time. Any data before this date will not be replicated.",
              "title": "Start Date",
              "examples": ["2016-12-31 23:59:59"]
            }
          },
          "required": ["client_id", "athlete_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "type": "string",
              "description": "The Client Secret of your Strava developer application.",
              "title": "Client Secret",
              "pattern": "^[0-9a-fA-F]+$",
              "examples": ["fc6243f283e51f6ca989aab298b17da125496f50"]
            },
            "refresh_token": {
              "type": "string",
              "description": "The Refresh Token with the activity: read_all permissions.",
              "title": "Refresh Token",
              "pattern": "^[0-9a-fA-F]+$",
              "examples": ["fc6243f283e51f6ca989aab298b17da125496f50"]
            }
          },
          "required": ["client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-stripe",
        "name": "Stripe",
        "description": "Airbyte connector for Stripe. For more information, see https://docs.airbyte.io/integrations/sources/stripe",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "stripe",
        "canonicalDataSourceName": "stripe",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "account_id": {
              "type": "string",
              "title": "Account ID",
              "description": "Your Stripe account ID (starts with 'acct_', find yours <a href=\"https://dashboard.stripe.com/settings/account\">here</a>).",
              "order": 0
            },
            "start_date": {
              "type": "string",
              "title": "Replication start date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.",
              "examples": ["2017-01-25T00:00:00Z"],
              "order": 2
            },
            "lookback_window_days": {
              "type": "integer",
              "title": "Lookback Window in days (Optional)",
              "default": 0,
              "minimum": 0,
              "description": "When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. More info <a href=\"https://docs.airbyte.com/integrations/sources/stripe#requirements\">here</a>",
              "order": 3
            }
          },
          "required": ["account_id", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_secret": {
              "type": "string",
              "title": "Secret Key",
              "description": "Stripe API key (usually starts with 'sk_live_'; find yours <a href=\"https://dashboard.stripe.com/apikeys\">here</a>).",
              "order": 1
            }
          },
          "required": ["client_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-surveymonkey",
        "name": "SurveyMonkey",
        "description": "Airbyte connector for SurveyMonkey. For more information, see https://docs.airbyte.io/integrations/sources/surveymonkey",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "surveymonkey",
        "canonicalDataSourceName": "surveymonkey",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z?$",
              "examples": ["2021-01-01T00:00:00Z"]
            },
            "survey_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9]{8,9}$"
              },
              "title": "Survey Monkey survey IDs",
              "description": "IDs of the surveys from which you'd like to replicate data. If left empty, data from all boards to which you have access will be replicated."
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "title": "Access Token",
              "type": "string",
              "description": "Access Token for making authenticated requests. See the <a href=\"https://docs.airbyte.io/integrations/sources/surveymonkey\">docs</a> for information on how to generate this key."
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-tempo",
        "name": "Tempo",
        "description": "Airbyte connector for Tempo. For more information, see https://docs.airbyte.io/integrations/sources/",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "tempo",
        "canonicalDataSourceName": "tempo",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "type": "string",
              "title": "API token",
              "description": "Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and select API integration."
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-tidb",
        "name": "TiDB",
        "description": "Airbyte connector for TiDB. For more information, see https://docs.airbyte.io/integrations/sources/tidb",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "tidb",
        "canonicalDataSourceName": "tidb",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "host": {
              "description": "Hostname of the database.",
              "type": "string",
              "order": 0
            },
            "port": {
              "description": "Port of the database.",
              "title": "Port",
              "type": "integer",
              "minimum": 0,
              "maximum": 65536,
              "default": 4000,
              "examples": ["4000"],
              "order": 1
            },
            "database": {
              "description": "Name of the database.",
              "title": "Database",
              "type": "string",
              "order": 2
            },
            "username": {
              "description": "Username to use to access the database.",
              "type": "string",
              "order": 3
            },
            "jdbc_url_params": {
              "description": "Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3)",
              "title": "JDBC URL Params",
              "type": "string",
              "order": 5
            },
            "ssl": {
              "title": "SSL Connection",
              "description": "Encrypt data using SSL.",
              "type": "boolean",
              "default": false,
              "order": 6
            }
          },
          "required": ["host", "port", "database", "username"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "password": {
              "description": "Password associated with the username.",
              "title": "Password",
              "type": "string",
              "order": 4
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-tiktok-marketing",
        "name": "TikTok Marketing",
        "description": "Airbyte connector for TikTok Marketing. For more information, see https://docs.airbyte.io/integrations/sources/tiktok-marketing",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "tiktok-marketing",
        "canonicalDataSourceName": "tiktok-marketing",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Replication Start Date *",
              "description": "The Start Date in format: YYYY-MM-DD. Any data before this date will not be replicated. If this parameter is not set, all data will be replicated.",
              "default": "2016-09-01",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
              "order": 1,
              "type": "string"
            },
            "report_granularity": {
              "title": "Report Aggregation Granularity *",
              "description": "The granularity used for aggregating performance data in reports. See <a href=\"https://docs.airbyte.com/integrations/sources/tiktok-marketing/#report-aggregation\">the docs</a>.",
              "default": "DAY",
              "enum": ["LIFETIME", "DAY", "HOUR"],
              "order": 2,
              "type": "string"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication Method",
              "description": "Authentication method",
              "default": {},
              "order": 0,
              "type": "object",
              "oneOf": [
                {
                  "title": "Sandbox Access Token",
                  "type": "object",
                  "properties": {
                    "auth_type": {
                      "title": "Auth Type",
                      "const": "sandbox_access_token",
                      "order": 0,
                      "type": "string"
                    },
                    "advertiser_id": {
                      "title": "Advertiser ID",
                      "description": "The Advertiser ID which generated for the developer's Sandbox application.",
                      "type": "string"
                    },
                    "access_token": {
                      "title": "Access Token",
                      "description": "The long-term authorized access token.",
                      "type": "string"
                    }
                  },
                  "required": ["advertiser_id", "access_token"]
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-trello",
        "name": "Trello",
        "description": "Airbyte connector for Trello. For more information, see https://docs.airbyte.io/integrations/sources/trello",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "trello",
        "canonicalDataSourceName": "trello",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$",
              "description": "UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.",
              "examples": ["2021-03-01T00:00:00.000Z"]
            },
            "board_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[0-9a-fA-F]{24}$"
              },
              "title": "Trello Board IDs",
              "description": "IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated."
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "token": {
              "type": "string",
              "title": "API token",
              "description": "Trello v API token. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\">docs</a> for instructions on how to generate it."
            },
            "key": {
              "type": "string",
              "title": "API key",
              "description": "Trello API key. See the <a href=\"https://developer.atlassian.com/cloud/trello/guides/rest-api/authorization/#using-basic-oauth\">docs</a> for instructions on how to generate it."
            }
          },
          "required": ["token", "key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-twilio",
        "name": "Twilio",
        "description": "Airbyte connector for Twilio. For more information, see https://docs.airbyte.io/integrations/sources/twilio",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "twilio",
        "canonicalDataSourceName": "twilio",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "title": "Replication Start Date",
              "description": "UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2020-10-01T00:00:00Z"],
              "type": "string"
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "account_sid": {
              "title": "Account ID",
              "description": "Twilio account SID",
              "type": "string"
            },
            "auth_token": {
              "title": "Auth Token",
              "description": "Twilio Auth Token.",
              "type": "string"
            }
          },
          "required": ["account_sid", "auth_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-typeform",
        "name": "Typeform",
        "description": "Airbyte connector for Typeform. For more information, see https://docs.airbyte.io/integrations/sources/typeform",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "typeform",
        "canonicalDataSourceName": "typeform",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "description": "UTC date and time in the format: YYYY-MM-DDTHH:mm:ss[Z]. Any data before this date will not be replicated.",
              "title": "Start Date",
              "examples": ["2020-01-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "form_ids": {
              "title": "Form IDs to replicate",
              "description": "When this parameter is set, the connector will replicate data only from the input forms. Otherwise, all forms in your Typeform account will be replicated. You can find form IDs in your form URLs. For example, in the URL \"https://mysite.typeform.com/to/u6nXL7\" the form_id is u6nXL7. You can find form URLs on Share panel",
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "token": {
              "type": "string",
              "description": "The API Token for a Typeform account.",
              "title": "API Token"
            }
          },
          "required": ["token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-us-census",
        "name": "US Census",
        "description": "Airbyte connector for US Census. For more information, see https://docs.airbyte.io/integrations/sources/us-census",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "us-census",
        "canonicalDataSourceName": "us-census",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "query_params": {
              "type": "string",
              "description": "The query parameters portion of the GET request, without the api key",
              "pattern": "^\\w+=[\\w,:*]+(&(?!key)\\w+=[\\w,:*]+)*$",
              "examples": [
                "get=NAME,NAICS2017_LABEL,LFO_LABEL,EMPSZES_LABEL,ESTAB,PAYANN,PAYQTR1,EMP&for=us:*&NAICS2017=72&LFO=001&EMPSZES=001",
                "get=MOVEDIN,GEOID1,GEOID2,MOVEDOUT,FULL1_NAME,FULL2_NAME,MOVEDNET&for=county:*"
              ]
            },
            "query_path": {
              "type": "string",
              "description": "The path portion of the GET request",
              "pattern": "^data(\\/[\\w\\d]+)+$",
              "examples": [
                "data/2019/cbp",
                "data/2018/acs",
                "data/timeseries/healthins/sahie"
              ]
            }
          },
          "required": ["query_path"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_key": {
              "type": "string",
              "description": "Your API Key. Get your key <a href=\"https://api.census.gov/data/key_signup.html\">here</a>."
            }
          },
          "required": ["api_key"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-youtube-analytics",
        "name": "YouTube Analytics",
        "description": "Airbyte connector for YouTube Analytics. For more information, see https://docs.airbyte.io/integrations/sources/youtube-analytics",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "youtube-analytics",
        "canonicalDataSourceName": "youtube-analytics",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authenticate via OAuth 2.0",
              "type": "object",
              "required": ["client_id", "client_secret", "refresh_token"],
              "additionalProperties": false,
              "properties": {
                "client_id": {
                  "title": "Client ID",
                  "type": "string",
                  "description": "The Client ID of your developer application"
                },
                "client_secret": {
                  "title": "Client Secret",
                  "type": "string",
                  "description": "The client secret of your developer application"
                },
                "refresh_token": {
                  "title": "Refresh Token",
                  "type": "string",
                  "description": "A refresh token generated using the above client ID and secret"
                }
              }
            }
          },
          "required": ["credentials"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zendesk-chat",
        "name": "Zendesk Chat",
        "description": "Airbyte connector for Zendesk Chat. For more information, see https://docs.airbyte.io/integrations/sources/zendesk-chat",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zendesk-chat",
        "canonicalDataSourceName": "zendesk-chat",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Zendesk Chat API, in the format YYYY-MM-DDT00:00:00Z.",
              "examples": ["2021-02-01T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "subdomain": {
              "type": "string",
              "title": "Subdomain (Optional)",
              "description": "Required if you access Zendesk Chat from a Zendesk Support subdomain.",
              "default": ""
            }
          },
          "required": ["start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "Access Token",
                  "required": ["credentials", "access_token"],
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "access_token",
                      "enum": ["access_token"],
                      "default": "access_token",
                      "order": 0
                    },
                    "access_token": {
                      "type": "string",
                      "title": "Access Token",
                      "description": "The Access Token to make authenticated requests."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zendesk-sunshine",
        "name": "Zendesk Sunshine",
        "description": "Airbyte connector for Zendesk Sunshine. For more information, see https://docs.airbyte.io/integrations/sources/zendesk_sunshine",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zendesk-sunshine",
        "canonicalDataSourceName": "zendesk-sunshine",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "subdomain": {
              "title": "Subdomain",
              "type": "string",
              "description": "The subdomain for your Zendesk Account."
            },
            "start_date": {
              "title": "Start Date",
              "type": "string",
              "description": "The date from which you'd like to replicate data for Zendesk Sunshine API, in the format YYYY-MM-DDT00:00:00Z.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$",
              "examples": ["2021-01-01T00:00:00Z"]
            }
          },
          "required": ["subdomain", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authorization Method",
              "type": "object",
              "oneOf": [
                {
                  "type": "object",
                  "title": "API Token",
                  "required": ["auth_method", "api_token", "email"],
                  "properties": {
                    "auth_method": {
                      "type": "string",
                      "const": "api_token",
                      "enum": ["api_token"],
                      "default": "api_token",
                      "order": 1
                    },
                    "api_token": {
                      "type": "string",
                      "title": "API Token",
                      "description": "API Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/zendesk_sunshine\">docs</a> for information on how to generate this key."
                    },
                    "email": {
                      "type": "string",
                      "title": "Email",
                      "description": "The user email for your Zendesk account"
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zendesk-support",
        "name": "Zendesk Support",
        "description": "Airbyte connector for Zendesk Support. For more information, see https://docs.airbyte.io/integrations/sources/zendesk-support",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zendesk-support",
        "canonicalDataSourceName": "zendesk-support",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "The date from which you'd like to replicate data for Zendesk Support API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.",
              "examples": ["2020-10-15T00:00:00Z"],
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}Z$"
            },
            "subdomain": {
              "type": "string",
              "title": "Subdomain",
              "description": "This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY_SUBDOMAIN}.zendesk.com/, where MY_SUBDOMAIN is the value of your subdomain."
            }
          },
          "required": ["start_date", "subdomain"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "credentials": {
              "title": "Authentication *",
              "type": "object",
              "description": "Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.",
              "oneOf": [
                {
                  "title": "API Token",
                  "type": "object",
                  "required": ["email", "api_token"],
                  "additionalProperties": true,
                  "properties": {
                    "credentials": {
                      "type": "string",
                      "const": "api_token",
                      "order": 0
                    },
                    "email": {
                      "title": "Email",
                      "type": "string",
                      "description": "The user email for your Zendesk account."
                    },
                    "api_token": {
                      "title": "API Token",
                      "type": "string",
                      "description": "The value of the API token generated. See the <a href=\"https://docs.airbyte.com/integrations/sources/zendesk-support#setup-guide\">docs</a> for more information."
                    }
                  }
                }
              ]
            }
          },
          "required": []
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zendesk-talk",
        "name": "Zendesk Talk",
        "description": "Airbyte connector for Zendesk Talk. For more information, see https://docs.airbyte.io/integrations/sources/zendesk-talk",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zendesk-talk",
        "canonicalDataSourceName": "zendesk-talk",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "subdomain": {
              "title": "Subdomain",
              "description": "The subdomain for your Zendesk Talk.",
              "type": "string"
            },
            "email": {
              "title": "Email",
              "description": "The user email for your Zendesk account.",
              "type": "string"
            },
            "start_date": {
              "title": "Replication Start Date",
              "description": "The date/datetime from which you'd like to replicate data for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. The time part is optional.",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}(T[0-9]{2}:[0-9]{2}:[0-9]{2}Z)?$",
              "examples": ["2017-01-25T00:00:00Z", "2017-01-25"],
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["subdomain", "email", "start_date"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "access_token": {
              "title": "Access Token",
              "description": "The value of the API token generated. See the <a href=\"https://docs.airbyte.io/integrations/sources/zendesk-talk\">docs</a> for more information.",
              "type": "string"
            }
          },
          "required": ["access_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zenloop",
        "name": "Zenloop",
        "description": "Airbyte connector for Zenloop. For more information, see https://docs.airbyte.io/integrations/sources/zenloop",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zenloop",
        "canonicalDataSourceName": "zenloop",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "date_from": {
              "type": "string",
              "description": "Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced",
              "examples": ["2021-10-24T03:30:30Z"]
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "api_token": {
              "type": "string",
              "description": "Zenloop API Token. You can get the API token in settings page <a href=\"https://app.zenloop.com/settings/api\">here</a> "
            },
            "survey_id": {
              "type": "string",
              "description": "Zenloop Survey ID. Can be found <a href=\"https://app.zenloop.com/settings/api\">here</a>. Leave empty to pull answers from all surveys"
            },
            "survey_group_id": {
              "type": "string",
              "description": "Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups"
            }
          },
          "required": ["api_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zoho-crm",
        "name": "ZohoCRM",
        "description": "Airbyte connector for ZohoCRM. For more information, see https://docs.airbyte.com/integrations/sources/zoho-crm",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zoho-crm",
        "canonicalDataSourceName": "zoho-crm",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "dc_region": {
              "title": "Data Center Location",
              "type": "string",
              "description": "Please choose the region of your Data Center location. More info by this <a href=\"https://www.zoho.com/crm/developer/docs/api/v2/multi-dc.html\">Link</a>",
              "enum": ["US", "AU", "EU", "IN", "CN", "JP"]
            },
            "environment": {
              "title": "Environment",
              "type": "string",
              "description": "Please choose the environment",
              "enum": ["Production", "Developer", "Sandbox"]
            },
            "start_datetime": {
              "title": "Start Date",
              "type": "string",
              "examples": [
                "2000-01-01",
                "2000-01-01 13:00",
                "2000-01-01 13:00:00",
                "2000-01-01T13:00+00:00",
                "2000-01-01T13:00:00-07:00"
              ],
              "description": "ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`",
              "format": "date-time"
            },
            "edition": {
              "title": "Zoho CRM Edition",
              "type": "string",
              "description": "Choose your Edition of Zoho CRM to determine API Concurrency Limits",
              "enum": [
                "Free",
                "Standard",
                "Professional",
                "Enterprise",
                "Ultimate"
              ],
              "default": "Free"
            }
          },
          "required": ["dc_region", "environment", "edition"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "OAuth2.0 Client ID"
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "OAuth2.0 Client Secret"
            },
            "refresh_token": {
              "type": "string",
              "title": "Refresh Token",
              "description": "OAuth2.0 Refresh Token"
            }
          },
          "required": ["client_id", "client_secret", "refresh_token"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zoom-singer",
        "name": "Zoom",
        "description": "Airbyte connector for Zoom. For more information, see https://docs.airbyte.io/integrations/sources/zoom",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zoom-singer",
        "canonicalDataSourceName": "zoom-singer",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            }
          },
          "required": []
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "jwt": {
              "title": "JWT Token",
              "type": "string",
              "description": "Zoom JWT Token. See the <a href=\"https://docs.airbyte.io/integrations/sources/zoom\">docs</a> for more information on how to obtain this key."
            }
          },
          "required": ["jwt"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      {
        "pluginName": "airbyte-zuora",
        "name": "Zuora",
        "description": "Airbyte connector for Zuora. For more information, see https://docs.airbyte.io/integrations/sources/zuora",
        "supportsMount": false,
        "supportsSync": true,
        "supportsLoad": true,
        "marketingSlug": "zuora",
        "canonicalDataSourceName": "zuora",
        "paramsSchema": {
          "type": "object",
          "properties": {
            "normalization_mode": {
              "type": "string",
              "title": "Post-ingestion normalization",
              "description": "Whether to normalize raw Airbyte tables. `none` is no normalization, `basic` is Airbyte's basic normalization, `custom` is a custom dbt transformation on the data.",
              "enum": ["none", "basic", "custom"],
              "default": "basic"
            },
            "normalization_git_branch": {
              "type": "string",
              "title": "dbt model Git branch",
              "description": "Branch or commit hash to use for the normalization dbt project.",
              "default": "master"
            },
            "start_date": {
              "type": "string",
              "title": "Start Date",
              "description": "Start Date in format: YYYY-MM-DD",
              "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
            },
            "window_in_days": {
              "type": "string",
              "title": "Query Window (in days)",
              "description": "The amount of days for each data-chunk begining from start_date. Bigger the value - faster the fetch. (0.1 - as for couple of hours, 1 - as for a Day; 364 - as for a Year).",
              "examples": ["0.5", "1", "30", "60", "90", "120", "200", "364"],
              "pattern": "^(0|[1-9]\\d*)(\\.\\d+)?$",
              "default": "90"
            },
            "tenant_endpoint": {
              "title": "Tenant Endpoint Location",
              "type": "string",
              "description": "Please choose the right endpoint where your Tenant is located. More info by this <a href=\"https://www.zuora.com/developer/api-reference/#section/Introduction/Access-to-the-API\">Link</a>",
              "enum": [
                "US Production",
                "US Cloud Production",
                "US API Sandbox",
                "US Cloud API Sandbox",
                "US Central Sandbox",
                "US Performance Test",
                "EU Production",
                "EU API Sandbox",
                "EU Central Sandbox"
              ]
            },
            "data_query": {
              "title": "Data Query Type",
              "type": "string",
              "description": "Choose between `Live`, or `Unlimited` - the optimized, replicated database at 12 hours freshness for high volume extraction <a href=\"https://knowledgecenter.zuora.com/Central_Platform/Query/Data_Query/A_Overview_of_Data_Query#Query_Processing_Limitations\">Link</a>",
              "enum": ["Live", "Unlimited"],
              "default": "Live"
            }
          },
          "required": ["start_date", "tenant_endpoint", "data_query"]
        },
        "credentialsSchema": {
          "type": "object",
          "properties": {
            "normalization_git_url": {
              "type": "string",
              "title": "dbt model Git URL",
              "description": "For `custom` normalization, a URL to the Git repo with the dbt project, for example,`https://uname:pass_or_token@github.com/organisation/repository.git`."
            },
            "client_id": {
              "type": "string",
              "title": "Client ID",
              "description": "Your OAuth user Client ID"
            },
            "client_secret": {
              "type": "string",
              "title": "Client Secret",
              "description": "Your OAuth user Client Secret"
            }
          },
          "required": ["client_id", "client_secret"]
        },
        "tableParamsSchema": {
          "type": "object",
          "properties": {
            "airbyte_cursor_field": {
              "type": "array",
              "title": "Cursor field(s)",
              "description": "Fields in this stream to be used as a cursor for incremental replication (overrides Airbyte configuration's cursor_field)",
              "items": {
                "type": "string"
              }
            },
            "airbyte_primary_key_field": {
              "type": "array",
              "title": "Primary key field(s)",
              "description": "Fields in this stream to be used as a primary key for deduplication (overrides Airbyte configuration's primary_key)",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    ]
  }
}
