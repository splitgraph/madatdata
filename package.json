{
  "name": "@madatdata/root",
  "packageManager": "yarn@3.2.1",
  "private": true,
  "workspaces": [
    "packages/*",
    "examples"
  ],
  "devDependencies": {
    "@types/node": "16.11.38",
    "@vitejs/plugin-react": "^1.3.2",
    "c8": "7.11.3",
    "global-agent": "3.0.0",
    "jsdom": "19.0.0",
    "msw": "0.43.1",
    "prettier": "2.7.1",
    "rimraf": "3.0.2",
    "tsc-multi": "0.6.1",
    "typescript": "4.7.4",
    "vitest": "0.18.0",
    "wireit": "0.7.1"
  },
  "resolutions": {
    "tsc-multi@0.6.1": "patch:tsc-multi@npm:0.6.1#.yarn/patches/tsc-multi-npm-0.6.1-6c7411b6ff.patch",
    "@madatdata/tiny-react-sandbox/react": "^18",
    "@madatdata/react@latest": "workspace:*"
  },
  "dependencies": {
    "cross-fetch": "3.1.5"
  },
  "scripts": {
    "codegen": "wireit",
    "typecheck": "wireit",
    "test": "yarn vitest",
    "build": "wireit",
    "not-clean": "yarn clean.verbose-default 2>&1 >/dev/null || true",
    "check": "yarn format.check && yarn codegen && yarn typecheck && yarn test-ci && yarn build",
    "test-ci": "yarn vitest run --coverage",
    "test-mitm": "INSECURE_TLS=1 MITM=http://127.0.0.1:7979 yarn vitest",
    "yeet": "yarn workspace @madatdata/yeet run yeet",
    "format": "yarn run format.base --write --list-different .",
    "format.check": "yarn run format.base --check . || { yarn run format.warn ; }",
    "format.base": "yarn prettier --config .prettierrc --ignore-path .prettierignore --ignore-unknown",
    "format.warn": "echo ; echo \"Formatting issues found. To apply changes, run yarn format\" ; exit 1 ;",
    "clean.verbose-default": "yarn rimraf dist packages/*/build/* packages/*/.wireit || true",
    "version-all": "yarn workspaces foreach -Atv run version",
    "version-all-patch": "yarn version-all patch -d",
    "publish-all": "yarn workspaces foreach -Atv run publish"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "typecheck"
      ],
      "command": "yarn tsc-multi --verbose",
      "clean": true,
      "//": "NOTE: declare output but not input, to always force a clean build",
      "output": [
        "packages/**/build"
      ],
      "packageLocks": [
        "yarn.lock"
      ]
    },
    "typecheck": {
      "dependencies": [
        "codegen"
      ],
      "command": "yarn tsc --build --verbose --pretty tsconfig.json",
      "//": "NOTE: let tsc handle incremental builds (don't declare wireit files/output)"
    },
    "codegen": {
      "dependencies": [
        "./packages/db-splitgraph:generate-code"
      ],
      "command": "echo codegen-shim",
      "output": [],
      "files": []
    }
  }
}
